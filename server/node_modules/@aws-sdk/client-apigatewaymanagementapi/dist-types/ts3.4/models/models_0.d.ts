import { MetadataBearer as $MetadataBearer, SmithyException as __SmithyException } from "@aws-sdk/types";
export interface DeleteConnectionRequest {
    ConnectionId: string | undefined;
}
export declare namespace DeleteConnectionRequest {
    
    const filterSensitiveLog: (obj: DeleteConnectionRequest) => any;
}

export interface ForbiddenException extends __SmithyException, $MetadataBearer {
    name: "ForbiddenException";
    $fault: "client";
}
export declare namespace ForbiddenException {
    
    const filterSensitiveLog: (obj: ForbiddenException) => any;
}

export interface GoneException extends __SmithyException, $MetadataBearer {
    name: "GoneException";
    $fault: "client";
}
export declare namespace GoneException {
    
    const filterSensitiveLog: (obj: GoneException) => any;
}

export interface LimitExceededException extends __SmithyException, $MetadataBearer {
    name: "LimitExceededException";
    $fault: "client";
}
export declare namespace LimitExceededException {
    
    const filterSensitiveLog: (obj: LimitExceededException) => any;
}
export interface GetConnectionRequest {
    ConnectionId: string | undefined;
}
export declare namespace GetConnectionRequest {
    
    const filterSensitiveLog: (obj: GetConnectionRequest) => any;
}
export interface Identity {
    
    SourceIp: string | undefined;
    
    UserAgent: string | undefined;
}
export declare namespace Identity {
    
    const filterSensitiveLog: (obj: Identity) => any;
}
export interface GetConnectionResponse {
    
    ConnectedAt?: Date;
    Identity?: Identity;
    
    LastActiveAt?: Date;
}
export declare namespace GetConnectionResponse {
    
    const filterSensitiveLog: (obj: GetConnectionResponse) => any;
}

export interface PayloadTooLargeException extends __SmithyException, $MetadataBearer {
    name: "PayloadTooLargeException";
    $fault: "client";
    Message?: string;
}
export declare namespace PayloadTooLargeException {
    
    const filterSensitiveLog: (obj: PayloadTooLargeException) => any;
}
export interface PostToConnectionRequest {
    
    Data: Uint8Array | undefined;
    
    ConnectionId: string | undefined;
}
export declare namespace PostToConnectionRequest {
    
    const filterSensitiveLog: (obj: PostToConnectionRequest) => any;
}
