[{"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\index.js":"1","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\reportWebVitals.js":"2","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\App.js":"3","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\serviceWorker.js":"4","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_reducers\\index.js":"5","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Login.js":"6","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Statistic.js":"7","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Register.js":"8","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Board.js":"9","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Chat.js":"10","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\MyPage.js":"11","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_reducers\\user_reducers.js":"12","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\Config.js":"13","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_actions\\user_actions.js":"14","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Login\\LoginInput.js":"15","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Login\\LoginButton.js":"16","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\Header.js":"17","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\styledBox.js":"18","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\ChcekIdButton.js":"19","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterInput.js":"20","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\LimitOnLength.js":"21","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterButton.js":"22","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\styledContainer.js":"23","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardView.js":"24","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterSelect.js":"25","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardDetail.js":"26","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\WriteBoardPage.js":"27","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardMain.js":"28","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\ChatDetail.js":"29","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Section\\AddChat.js":"30","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\ChatMain.js":"31","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Section\\BarChart.js":"32","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\ChatView.js":"33","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\MyBoardList.js":"34","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Nickname.js":"35","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Email.js":"36","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\PageList.js":"37","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Favorite.js":"38","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Comment.js":"39","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Password.js":"40","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\WithDrawal.js":"41","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Profile.js":"42","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\LogoutButton.js":"43","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardInput.js":"44","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\UserProfile.js":"45","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardTextarea.js":"46","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CheckNickname.js":"47","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\AddBoard.js":"48","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\UserProfile.js":"49","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageTitle.js":"50","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\Footer.js":"51","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageInput.js":"52","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageButton.js":"53","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Section\\WriteChat.js":"54","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\HeaderWithStatistic.js":"55","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\UpdateTime.js":"56","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Input.js":"57","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\RoomInfo.js":"58","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\AddComment.js":"59","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardSubmit.js":"60","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CommentInput.js":"61","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BestPost.js":"62","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\WriteBoard.js":"63","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Messages\\Messages.js":"64","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\LikeButton.js":"65","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CommentButton.js":"66","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\DeleteBoard.js":"67","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\DeleteComment.js":"68","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Messages\\Message\\Message.js":"69"},{"size":915,"mtime":1638791599291,"results":"70","hashOfConfig":"71"},{"size":375,"mtime":1638791599295,"results":"72","hashOfConfig":"71"},{"size":1033,"mtime":1638808014282,"results":"73","hashOfConfig":"71"},{"size":5124,"mtime":1638791599295,"results":"74","hashOfConfig":"71"},{"size":165,"mtime":1638791599252,"results":"75","hashOfConfig":"71"},{"size":3074,"mtime":1638796413125,"results":"76","hashOfConfig":"71"},{"size":1352,"mtime":1638808014289,"results":"77","hashOfConfig":"71"},{"size":6054,"mtime":1638796413125,"results":"78","hashOfConfig":"71"},{"size":1062,"mtime":1638811293098,"results":"79","hashOfConfig":"71"},{"size":784,"mtime":1638791599292,"results":"80","hashOfConfig":"71"},{"size":1370,"mtime":1638791599293,"results":"81","hashOfConfig":"71"},{"size":885,"mtime":1638796413121,"results":"82","hashOfConfig":"71"},{"size":162,"mtime":1638791599251,"results":"83","hashOfConfig":"71"},{"size":1423,"mtime":1638796413120,"results":"84","hashOfConfig":"71"},{"size":665,"mtime":1638791599279,"results":"85","hashOfConfig":"71"},{"size":507,"mtime":1638791599278,"results":"86","hashOfConfig":"71"},{"size":2555,"mtime":1638808014287,"results":"87","hashOfConfig":"71"},{"size":671,"mtime":1638791599289,"results":"88","hashOfConfig":"71"},{"size":599,"mtime":1638791599285,"results":"89","hashOfConfig":"71"},{"size":937,"mtime":1638791599286,"results":"90","hashOfConfig":"71"},{"size":282,"mtime":1638791599285,"results":"91","hashOfConfig":"71"},{"size":559,"mtime":1638791599286,"results":"92","hashOfConfig":"71"},{"size":402,"mtime":1638791599290,"results":"93","hashOfConfig":"71"},{"size":4443,"mtime":1638811293096,"results":"94","hashOfConfig":"71"},{"size":1033,"mtime":1638791599287,"results":"95","hashOfConfig":"71"},{"size":5112,"mtime":1638811293092,"results":"96","hashOfConfig":"71"},{"size":2965,"mtime":1638811293098,"results":"97","hashOfConfig":"71"},{"size":2781,"mtime":1638811293094,"results":"98","hashOfConfig":"71"},{"size":3716,"mtime":1638816974540,"results":"99","hashOfConfig":"71"},{"size":1875,"mtime":1638791599275,"results":"100","hashOfConfig":"71"},{"size":2696,"mtime":1638791599270,"results":"101","hashOfConfig":"71"},{"size":2715,"mtime":1638808014286,"results":"102","hashOfConfig":"71"},{"size":3667,"mtime":1638813189197,"results":"103","hashOfConfig":"71"},{"size":1975,"mtime":1638791599282,"results":"104","hashOfConfig":"71"},{"size":2375,"mtime":1638820110277,"results":"105","hashOfConfig":"71"},{"size":3282,"mtime":1638791599281,"results":"106","hashOfConfig":"71"},{"size":1670,"mtime":1638791599279,"results":"107","hashOfConfig":"71"},{"size":1773,"mtime":1638791599281,"results":"108","hashOfConfig":"71"},{"size":2174,"mtime":1638791599280,"results":"109","hashOfConfig":"71"},{"size":4190,"mtime":1638791599283,"results":"110","hashOfConfig":"71"},{"size":2353,"mtime":1638791599284,"results":"111","hashOfConfig":"71"},{"size":884,"mtime":1638791599283,"results":"112","hashOfConfig":"71"},{"size":741,"mtime":1638791599277,"results":"113","hashOfConfig":"71"},{"size":502,"mtime":1638791599263,"results":"114","hashOfConfig":"71"},{"size":2096,"mtime":1638791599268,"results":"115","hashOfConfig":"71"},{"size":671,"mtime":1638791599264,"results":"116","hashOfConfig":"71"},{"size":1028,"mtime":1638791599265,"results":"117","hashOfConfig":"71"},{"size":2884,"mtime":1638811293097,"results":"118","hashOfConfig":"71"},{"size":2213,"mtime":1638808014288,"results":"119","hashOfConfig":"71"},{"size":391,"mtime":1638791599289,"results":"120","hashOfConfig":"71"},{"size":679,"mtime":1638791599276,"results":"121","hashOfConfig":"71"},{"size":433,"mtime":1638791599288,"results":"122","hashOfConfig":"71"},{"size":491,"mtime":1638791599288,"results":"123","hashOfConfig":"71"},{"size":1891,"mtime":1638812413553,"results":"124","hashOfConfig":"71"},{"size":2651,"mtime":1638808014287,"results":"125","hashOfConfig":"71"},{"size":828,"mtime":1638791599278,"results":"126","hashOfConfig":"71"},{"size":944,"mtime":1638791599271,"results":"127","hashOfConfig":"71"},{"size":643,"mtime":1638791599274,"results":"128","hashOfConfig":"71"},{"size":1899,"mtime":1638791599262,"results":"129","hashOfConfig":"71"},{"size":1151,"mtime":1638791599264,"results":"130","hashOfConfig":"71"},{"size":533,"mtime":1638791599266,"results":"131","hashOfConfig":"71"},{"size":1676,"mtime":1638791599263,"results":"132","hashOfConfig":"71"},{"size":967,"mtime":1638791599268,"results":"133","hashOfConfig":"71"},{"size":603,"mtime":1638791599273,"results":"134","hashOfConfig":"71"},{"size":2718,"mtime":1638791599267,"results":"135","hashOfConfig":"71"},{"size":1120,"mtime":1638791599265,"results":"136","hashOfConfig":"71"},{"size":939,"mtime":1638791599266,"results":"137","hashOfConfig":"71"},{"size":936,"mtime":1638791599267,"results":"138","hashOfConfig":"71"},{"size":1073,"mtime":1638791599272,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"1irw31e",{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"142"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"142"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"142"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"142"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"142"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"142"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"142"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"142"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"142"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"142"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"142"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"142"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"142"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"142"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"142"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"142"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"142"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\index.js",[],["297","298"],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\reportWebVitals.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\App.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\serviceWorker.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_reducers\\index.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Login.js",["299"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser } from \"../_actions/user_actions\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../assets/logo.png\";\r\nimport LoginInput from \"../components/Login/LoginInput\";\r\nimport LoginButton from \"../components/Login/LoginButton\";\r\nimport StyledContainer from \"../components/Style/styledContainer\";\r\n\r\nconst FlexBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 50px 0px 12px 0px;\r\n`;\r\nconst Logo = styled.img`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 52px;\r\n`;\r\nconst LogoTitle = styled.h2`\r\n  color: #757575;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  padding: 28px 8px 0px 0px;\r\n  letter-spacing: -0.045rem;\r\n`;\r\nconst StyledDiv = styled.div`\r\n  color: #40a940;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n`;\r\nconst StyledSpan = styled.span`\r\n  color: #909090;\r\n  font-weight: 300;\r\n  margin-right: 10px;\r\n  letter-spacing: -0.05rem;\r\n`;\r\n\r\nfunction Login({ history }) {\r\n  const dispatch = useDispatch();\r\n  const [inputs, setInput] = useState({\r\n    userId: \"\",\r\n    userPw: \"\",\r\n  });\r\n\r\n  const { userId, userPw } = inputs;\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInput({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let body = {\r\n      userid: userId,\r\n      userpw: userPw,\r\n    };\r\n    if (!userId || !userPw) {\r\n      alert(\"필수 항목을 작성하세요!\");\r\n    } else {\r\n      dispatch(loginUser(body)).then((response) => {\r\n        if (response.payload.status) {\r\n          window.localStorage.setItem(\"userId\", response.payload.userid);\r\n          window.localStorage.setItem(\"token\", response.payload.token);\r\n          history.push(\"/board\");\r\n        } else {\r\n          alert(response.payload.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <div>\r\n        <FlexBox>\r\n          <Logo src={logo} alt=\"logo\" />\r\n          <LogoTitle>\r\n            지금\r\n            <strong> 그룹 카운슬링</strong>을 시작하세요!\r\n          </LogoTitle>\r\n        </FlexBox>\r\n        <form onSubmit={onSubmit}>\r\n          <LoginInput\r\n            type=\"text\"\r\n            name=\"userId\"\r\n            placeholder=\"아이디\"\r\n            onChange={onChange}\r\n            value={userId}\r\n          />\r\n          <LoginInput\r\n            type=\"password\"\r\n            name=\"userPw\"\r\n            placeholder=\"비밀번호\"\r\n            onChange={onChange}\r\n            value={userPw}\r\n          />\r\n          <LoginButton type=\"submit\">로그인</LoginButton>\r\n        </form>\r\n        <StyledDiv>\r\n          <Link to=\"./register\">\r\n            <StyledSpan>그룹 카운슬링에 처음이신가요?</StyledSpan>회원가입\r\n          </Link>\r\n        </StyledDiv>\r\n      </div>\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Statistic.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Register.js",["300"],"import React, { useState } from \"react\";\r\nimport { DEV_SERVER, ROOT_SERVER } from \"../Config\";\r\nimport axios from \"axios\";\r\nimport Header from \"../components/Common/Header\";\r\nimport StyledBox from \"../components/Style/styledBox\";\r\nimport StyledContainer from \"../components/Style/styledContainer\";\r\nimport CheckIdButton from \"../components/Register/ChcekIdButton\";\r\nimport RegisterInput from \"../components/Register/RegisterInput\";\r\nimport LimitOnLength from \"../components/Register/LimitOnLength\";\r\nimport RegisterButton from \"../components/Register/RegisterButton\";\r\nimport RegisterSelect from \"../components/Register/RegisterSelect\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../_actions/user_actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst userPositionArray = [];\r\nuserPositionArray.push(\"일반 사용자\");\r\nuserPositionArray.push(\"상담사\");\r\n\r\nfunction Register({ history }) {\r\n  const dispatch = useDispatch();\r\n  const [inputs, setInput] = useState({\r\n    userId: \"\",\r\n    userPw: \"\",\r\n    userEmail: \"\",\r\n    userNickname: \"\",\r\n    entranceYear: \"\",\r\n    usableId: false,\r\n  });\r\n\r\n  const { userId, userPw, userEmail, userNickname, entranceYear, usableId } =\r\n    inputs;\r\n  const [option, setOption] = useState(\"일반 사용자\");\r\n  const [overIdLength, setOverIdLength] = useState(false);\r\n  const [overPwLength, setOverPwLength] = useState(false);\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInput({\r\n      ...inputs,\r\n      [name]: value,\r\n      usableId: usableId,\r\n      // 사용가능한 아이디에 대한 것이므로 bool타입으로 따로 들어가게 된다.\r\n    });\r\n\r\n    if (inputs.userId.length >= 8) {\r\n      setOverIdLength(true);\r\n    } else {\r\n      setOverIdLength(false);\r\n    }\r\n\r\n    if (inputs.userPw.length >= 11) {\r\n      setOverPwLength(true);\r\n    } else {\r\n      setOverPwLength(false);\r\n    }\r\n  };\r\n\r\n  const checkId = (e) => {\r\n    e.preventDefault();\r\n    if (overIdLength) {\r\n      return;\r\n    }\r\n    axios\r\n      .post(`${DEV_SERVER}/user/check`, { userid: userId, userpw: userPw })\r\n      // 이 부분 추가적으로 고치기\r\n      .then((response) => {\r\n        if (response.data.status === \"success\") {\r\n          // 성공은 no record\r\n          setInput({\r\n            ...inputs,\r\n            usableId: true,\r\n          });\r\n          alert(\"사용가능한 아이디입니다.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        alert(\"다른 아이디를 입력해주세요\");\r\n      });\r\n  };\r\n  // 중복아이디 체크\r\n\r\n  const handleOption = (e) => {\r\n    setOption(e.target.value);\r\n  };\r\n  //이벤트가 전달한 객체의 값을 option으로 정해준다\r\n  const onSignUpHandle = (e) => {\r\n    e.preventDefault();\r\n    let body = {\r\n      userid: userId,\r\n      userpw: userPw,\r\n      email: userEmail,\r\n      nickname: userNickname,\r\n      entranceyear: entranceYear,\r\n      gubun: option,\r\n    };\r\n    if (overIdLength || overPwLength) {\r\n      return;\r\n    } else if (\r\n      !userId ||\r\n      !userPw ||\r\n      !userEmail ||\r\n      !userNickname ||\r\n      !entranceYear\r\n    ) {\r\n      alert(\"필수 항목을 작성해주세요\");\r\n      return;\r\n\r\n      // else if (usableId === false) {\r\n      //   alert(\"아이디 중복확인을 해주세요\");\r\n      //   return;\r\n    } else {\r\n      dispatch(registerUser(body))\r\n        .then((response) => {\r\n          if (response.payload.success) {\r\n            alert(\"회원가입을 완료했습니다.\");\r\n            history.push(\"/\");\r\n          } else {\r\n            alert(\"회원가입에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n  return (\r\n    <StyledContainer>\r\n      <div>\r\n        <Header link={\"./\"} title=\"회원가입\" backbutton={true} />\r\n        <StyledBox padding=\"18px 16px\" lineHeight=\"20px\">\r\n          <form onSubmit={checkId}>\r\n            <RegisterInput\r\n              labelName=\"아이디\"\r\n              name=\"userId\"\r\n              type=\"text\"\r\n              placeholder=\"아이디\"\r\n              onChange={onChange}\r\n              value={userId}\r\n            />\r\n            {overIdLength && (\r\n              <LimitOnLength>아이디를 8자 이내로 입력해주세요</LimitOnLength>\r\n            )}\r\n            <CheckIdButton onClick={checkId}>중복체크</CheckIdButton>\r\n          </form>\r\n          <form onSubmit={onSignUpHandle}>\r\n            <RegisterInput\r\n              labelName=\"비밀번호\"\r\n              name=\"userPw\"\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              onChange={onChange}\r\n              value={userPw}\r\n            />\r\n            {overPwLength && (\r\n              <LimitOnLength>비밀번호를 12자 이내로 입력해주세요</LimitOnLength>\r\n            )}\r\n            <RegisterInput\r\n              labelName=\"이메일\"\r\n              name=\"userEmail\"\r\n              type=\"email\"\r\n              placeholder=\"이메일\"\r\n              onChange={onChange}\r\n              value={userEmail}\r\n            />\r\n            <RegisterInput\r\n              labelName=\"닉네임\"\r\n              name=\"userNickname\"\r\n              type=\"text\"\r\n              placeholder=\"닉네임\"\r\n              onChange={onChange}\r\n              value={userNickname}\r\n            />\r\n            <RegisterInput\r\n              labelName=\"가입날짜\"\r\n              name=\"entranceYear\"\r\n              type=\"text\"\r\n              placeholder=\"가입날짜\"\r\n              onChange={onChange}\r\n              value={entranceYear}\r\n            />\r\n            <RegisterSelect\r\n              labelName=\"역할\"\r\n              handleOption={handleOption}\r\n              option={option}\r\n              dataArr={userPositionArray}\r\n            />{\" \"}\r\n            <RegisterButton type=\"submit\">회원가입</RegisterButton>\r\n          </form>\r\n        </StyledBox>\r\n      </div>\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nexport default withRouter(Register);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Board.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Chat.js",["301"],"import React from \"react\";\r\nimport { withRouter, Route } from \"react-router-dom\";\r\nimport ChatDetail from \"../components/Chat/ChatDetail\";\r\nimport ChatView from \"../components/Chat/ChatView\";\r\nimport ChatMain from \"../components/Chat/ChatMain\";\r\nimport addChat from \"../components/Chat/Section/AddChat\";\r\n\r\nconst Chat = ({ match }) => {\r\n  return (\r\n    <>\r\n      <Route exact path={match.path} component={ChatMain} />\r\n      {/* 채팅방 입장해서 서로 채팅하는 부분-chatdetail부분에서 이야기 하면 된다. */}\r\n      <Route path={`${match.path}/chatdetail/:id`} component={ChatDetail} />\r\n      {/* 채팅방 보여주는 부분 */}\r\n      <Route exact path={`${match.path}/:view`} component={ChatView} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Chat);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\MyPage.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_reducers\\user_reducers.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\Config.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_actions\\user_actions.js",["302"],"import axios from \"axios\";\r\nimport { DEV_SERVER, ROOT_SERVER } from \"../Config\";\r\n\r\nexport const REGISTER_USER = \"REGISTER_USER\";\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const AUTH_USER = \"AUTH_USER\";\r\n\r\nexport function registerUser(dataToSubmit) {\r\n  const request = axios\r\n    .post(`${DEV_SERVER}/user/register`, dataToSubmit)\r\n    .then((response) => response.data);\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function loginUser(dataToSubmit) {\r\n  // datatosubmit:username(or email),password->\r\n  // 사용자의 username, password가 넘어오게 되면 /user/check로 넘겨서 존재 여부를 확인, 존재할 경우\r\n  //     해당 사용자 데이터의 userid, usertype 등을 되돌려주고 세션에 token 정보를 등록함\r\n  const request = axios\r\n    .post(`${DEV_SERVER}/user/login`, dataToSubmit)\r\n    .then((response) => response.data);\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  const request = axios\r\n    .get(`${DEV_SERVER}/user/logout`)\r\n    .then((response) => response.data);\r\n  return {\r\n    type: LOGOUT_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function auth() {\r\n  const request = axios\r\n    .get(`${DEV_SERVER}/user/check`)\r\n    .then((response) => response.data);\r\n  return {\r\n    type: AUTH_USER,\r\n    payload: request,\r\n  };\r\n}\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Login\\LoginInput.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Login\\LoginButton.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\Header.js",["303"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport back from \"../../assets/cancel.png\";\r\nimport LogoutButton from \"../Common/LogoutButton\";\r\n\r\nconst StyledHeader = styled.div`\r\n  display: flex;\r\n  color: #353535;\r\n  background-color: #fff;\r\n  width: 100%;\r\n  height: 56px;\r\n  padding: 0px 8px;\r\n  margin-bottom: 8px;\r\n  align-items: center;\r\n  justify-content: start;\r\n`;\r\nconst StyledRight = styled.div`\r\n  display: flex;\r\n  margin-left: auto;\r\n`;\r\nconst Logo = styled.img`\r\n  margin-top: 5px;\r\n  width: 30px;\r\n  height: 32px;\r\n  vertical-align: middle;\r\n  cursor: pointer;\r\n`;\r\nconst HeaderTitle = styled.span`\r\n  color: #454545;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  text-align: left;\r\n  line-height: 56px;\r\n  margin-left: 8px;\r\n`;\r\nconst BackButton = styled.div`\r\n  line-height: 56px;\r\n  margin-right: 4px;\r\n`;\r\nconst Border = styled.button`\r\n  border: 1px solid #40a940;\r\n  width: 24px;\r\n  height: 24px;\r\n  margin-right: 12px;\r\n  border-radius: 4px;\r\n  vertical-align: middle;\r\n  cursor: pointer;\r\n`;\r\nconst Back = styled.img`\r\n  width: 10px;\r\n`;\r\nconst Profilebtn = styled.div`\r\n  /* display: flex; */\r\n  width: 60px;\r\n  height: 28px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  margin: 12px 8px;\r\n  font-size: 13px;\r\n  line-height: 28px;\r\n  color: #505050;\r\n  margin-left: auto;\r\n  padding-right: 8px;\r\n  padding-left: 8px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\nconst Statisticbtn = styled.div`\r\n  /* display: flex; */\r\n  width: 80px;\r\n  height: 28px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  margin: 12px 8px;\r\n  font-size: 13px;\r\n  line-height: 28px;\r\n  color: #505050;\r\n  margin-left: auto;\r\n  padding-right: 8px;\r\n  padding-left: 8px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\nfunction Header(props) {\r\n  return (\r\n    <StyledHeader>\r\n      <Link to={props.link}>\r\n        <Logo src={logo} alt=\"logo\" />\r\n        <HeaderTitle>{props.title}</HeaderTitle>\r\n      </Link>\r\n      <StyledRight>\r\n        <Link to=\"/mypage\">\r\n          <Profilebtn>내정보</Profilebtn>\r\n        </Link>\r\n\r\n        <Profilebtn>\r\n          <LogoutButton />\r\n        </Profilebtn>\r\n      </StyledRight>\r\n\r\n      {props.backbutton && (\r\n        <Link to=\"./\">\r\n          <BackButton style={{ lineHeight: \"56px\" }}>\r\n            <Border>\r\n              <Back src={back} alt=\"back\" />\r\n            </Border>\r\n          </BackButton>\r\n        </Link>\r\n      )}\r\n    </StyledHeader>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\styledBox.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\ChcekIdButton.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterInput.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\LimitOnLength.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterButton.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\styledContainer.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardView.js",["304","305","306","307","308","309","310","311","312"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport StyledBox from \"../Style/styledBox\";\r\nimport AddBoard from \"./Section/AddBoard\";\r\nimport BoardInput from \"./Section/BoardInput\";\r\nimport CheckNickname from \"./Section/CheckNickname\";\r\nimport BoardTextarea from \"./Section/BoardTextarea\";\r\nimport UserProfile from \"./Section/UserProfile\";\r\nimport Header from \"../Common/Header\";\r\nimport Footer from \"../Common/Footer\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport BoardSubmit from \"./Section/BoardSubmit\";\r\nimport WriteBoard from \"./Section/WriteBoard\";\r\nimport BestPost from \"./Section/BestPost\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DEV_SERVER } from \"../../Config\";\r\n\r\nconst PaginationBox = styled.div`\r\n  text-align: center;\r\n  margin-top: 1em;\r\n  margin-bottom: 1em;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nfunction BoardView({ history, match }) {\r\n  // 파라미터:history,match\r\n  const myToken = localStorage.getItem(\"token\");\r\n  const [totalPage, settotalPage] = useState(0); //전체 페이지 설정\r\n  const [currentPage, setcurrentPage] = useState(1); //현재 페이지 설정\r\n  const [Content, setContent] = useState([]); //컨텐츠\r\n\r\n  console.log(myToken);\r\n  useEffect(() => {\r\n    FetchBoard();\r\n    console.log(\"fetch\");\r\n  }, [currentPage]);\r\n\r\n  const FetchBoard = () => {\r\n    axios\r\n      .post(`${DEV_SERVER}/board/getBoard`, {\r\n        token: myToken,\r\n        page: currentPage,\r\n      }) //현재 페이지에 관련된 게시판들을 가져 온다\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setContent(response.data.boards); // 성공한경우 서버에서 준 데이터 안에 있는 게시판을 가지고 와서 세팅해줌\r\n          settotalPage(Math.ceil(response.data.count / 5)); //소수점 이하를 반올림 한다 즉, 한페이지에 5개씩만 보여줄 예정인듯\r\n        } else {\r\n          alert(\"게시글을 보여줄 수 없습니다.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  //\r\n  const onRemove = (id) => {\r\n    //\r\n    setContent(Content.filter((Content) => Content._id !== id)); // 컨텐츠를 filter 함수를 통해 다시 재구성한다\r\n    FetchBoard(); //게시판을 가지고 온다\r\n  };\r\n\r\n  const handlePageChange = (e) => {\r\n    //페이지 바꾸면 벌어지는 이벤트\r\n    const currentPage = parseInt(e.target.textContent);\r\n    setcurrentPage(currentPage); // ????\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"자유게시판\" link=\"/board\" />\r\n      <StyledBox backColor=\"#fafafa\" padding=\"10px 0px\" lineHeight=\"auto\">\r\n        {/*<Profilebox>*/}\r\n        {/*<UserProfile boardPage={true} />*/}\r\n        {/* userprofile 부분에 프로필과,아이디,학교등이 들어가게 된다. */}\r\n        {/*</Profilebox>*/}\r\n        {/* 글쓰기 부분 */}\r\n        <WriteBoard\r\n          link={`/board/${match.params.view}/writeboard`}\r\n          title={\"글쓰기\"}\r\n        />\r\n\r\n        {/* 게시판submit부분 컴포넌트화 */}\r\n\r\n        {/* 게시판 보여주는 부분 */}\r\n\r\n        {Content && //아까 서버로 보낸 컨텐츠를 Content안에에다가 넣어주게 된다\r\n          Content.map((board, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <AddBoard // content 배열안에 id,user,time등 여러가지가 존재하고 그 관련된 부분들을 Addboard 컴포넌트안에 넣어준다\r\n                  id={board.board_id}\r\n                  user={board.author_id}\r\n                  time={board.board_time}\r\n                  writer={board.author}\r\n                  title={board.board_title}\r\n                  content={board.board_contents}\r\n                  history={`${history}`}\r\n                  onRemove={onRemove}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n\r\n        <PaginationBox>\r\n          <Pagination\r\n            count={totalPage}\r\n            page={currentPage}\r\n            onChange={handlePageChange}\r\n            shape=\"rounded\"\r\n            size=\"small\"\r\n            hidePrevButton\r\n            hideNextButton\r\n          />\r\n          {/* 페이지네이션 하는 부분 */}\r\n        </PaginationBox>\r\n        <Footer />\r\n      </StyledBox>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(BoardView);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterSelect.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardDetail.js",["313"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../Common/Header\";\r\nimport AddBoard from \"./Section/AddBoard\";\r\nimport AddComment from \"./Section/AddComment\";\r\nimport CommentInput from \"./Section/CommentInput\";\r\nimport CheckNickname from \"./Section/CheckNickname\";\r\nimport menu from \"../../assets/menu.png\";\r\n\r\nconst CommentForm = styled.form`\r\n  position: relative;\r\n  background-color: #fafafa;\r\n  margin: 0px -1px;\r\n  box-sizing: border-box;\r\n`;\r\nconst BackButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  border: 1px solid #c62917;\r\n  border-radius: 4px;\r\n  width: 24%;\r\n  height: 36px;\r\n  margin: 12px 0px;\r\n`;\r\nconst BackTitle = styled.span`\r\n  color: #c62917;\r\n  font-size: 13px;\r\n  line-height: 36px;\r\n  text-align: center;\r\n`;\r\nconst MenuIcon = styled.img`\r\n  width: 12px;\r\n  height: 12px;\r\n  padding: 12px 0px;\r\n  margin-right: 4px;\r\n`\r\n// 게시판 디테일을 보여준다\r\n\r\n\r\nfunction BoardDetail(props) {\r\n  const BoardId = props.match.params.id; //Board에 {match.path}/:id가 되어 있고, 여기서 match.params.id라는 것은 params안에 있는 변수중 id 값을 가지고 온다고 하는 것이다\r\n  //addboard 부분 확인 하면 된다\r\n  const userFrom = localStorage.getItem(\"userId\");\r\n  const writerFrom = localStorage.getItem(\"userNickname\");\r\n  const [Comments, setComments] = useState([]);\r\n  const [BoardDetail, setBoardDetail] = useState([]);\r\n  const [BoardWriter, setBoardWriter] = useState(\"익명\");\r\n  const [WriterIcon, setWriterIcon] = useState(true);\r\n  const [Value, setValue] = useState(\"\");\r\n  let variables = {\r\n    userFrom: userFrom, //유저 아이디를 넣어주게 되고\r\n    boardFrom: BoardId,\r\n    commentContent: Value,\r\n    commentWriter: BoardWriter,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variable = { boardId: BoardId };\r\n    axios.post(`${props.match.path}`, variable).then((response) => {\r\n      if (response.data.success) {\r\n        setBoardDetail([response.data.board]);\r\n      } else {\r\n        alert(\"게시글 가져오기에 실패했습니다.\");\r\n      }\r\n    });\r\n    FetchComment(); //댓글 가져오기 실행\r\n  }, []);\r\n\r\n  const FetchComment = () => {\r\n    axios.post(\"/comment/getComment\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        setComments(response.data.comments);\r\n      } else {\r\n        alert(\"댓글을 보여줄 수 없습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onIconClick = () => {\r\n    if (WriterIcon) {\r\n      setWriterIcon(false);\r\n      setBoardWriter(writerFrom);\r\n    } else {\r\n      setWriterIcon(true);\r\n      setBoardWriter(\"익명\");\r\n    }\r\n  };\r\n  const onRemoveBoard = (id) => {\r\n    setBoardDetail(BoardDetail.filter((BoardDetail) => BoardDetail._id !== id));\r\n    props.history.push(\"/\");\r\n  };\r\n  const onRemoveComment = (id) => {\r\n    setComments(Comments.filter((Comments) => Comments._id !== id));\r\n  };\r\n  const onChange = (e) => {\r\n    setValue(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios.post(\"/comment/upload\", variables).then((response) => {\r\n      alert(\"댓글이 등록되었습니다.\");\r\n      setValue(\"\");\r\n      FetchComment();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"자유게시판\" link=\"/board\" />\r\n      {BoardDetail &&\r\n        BoardDetail.map((board, index) => {\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <AddBoard\r\n                id={board._id}\r\n                user={board.userFrom}\r\n                time={board.createdAt}\r\n                writer={board.boardWriter}\r\n                title={board.boardTitle}\r\n                content={board.boardContent}\r\n                history={`${props.history}`}\r\n                onRemove={onRemoveBoard}\r\n              />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n\r\n      <CommentForm onSubmit={onSubmit}>\r\n        <CommentInput\r\n          name=\"Comment\"\r\n          placeholder=\"댓글을 작성해주세요.\"\r\n          value={Value}\r\n          onChange={onChange}\r\n        />\r\n        <CheckNickname\r\n          left=\"284px\"\r\n          icon={WriterIcon}\r\n          click={onIconClick}\r\n          submit={onSubmit}\r\n        />\r\n      </CommentForm>\r\n      {Comments &&\r\n        Comments.map((comment, index) => {\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <AddComment // comment 부분\r\n                id={comment._id}\r\n                user={comment.userFrom}\r\n                time={comment.createdAt}\r\n                writer={comment.commentWriter}\r\n                content={comment.commentContent}\r\n                onRemove={onRemoveComment}\r\n              />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      <Link to=\"/board\">\r\n        <BackButton>\r\n          <MenuIcon src={menu} alt=\"menu\" />\r\n          <BackTitle>글 목록</BackTitle>\r\n        </BackButton>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(BoardDetail);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\WriteBoardPage.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardMain.js",["314","315","316","317"],"import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../Common/Header\";\r\nimport { useSelector } from \"react-redux\";\r\nconst BoardListbox = styled.div`\r\n  color: #212121;\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-bottom: 15px;\r\n  border-radius: 10px;\r\n  border: 1px solid #eaeaea;\r\n  box-sizing: content-box;\r\n`;\r\nconst BestPostBox = styled.div`\r\n  color: #212121;\r\n  width: 100%;\r\n  height: 200px;\r\n  margin: 8px 0px;\r\n  margin-bottom: 12px;\r\n  border-radius: 10px;\r\n  border: 1px solid #eaeaea;\r\n  box-sizing: border-box;\r\n`;\r\nconst StyledDiv = styled.div`\r\n  height: 50px;\r\n  & + & {\r\n    border-top: 1px solid #ddd;\r\n  }\r\n  line-height: 50px;\r\n  cursor: pointer;\r\n`;\r\nconst HeadTextDiv = styled.div`\r\n  color: #505050;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n`;\r\nconst ContextTextDiv = styled(Link)`\r\n  display: block;\r\n  color: #505050;\r\n  text-align: center;\r\n  font-size: 13px;\r\n`;\r\nconst FlexBox = styled.div`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: start;\r\n  margin: 10px 0px 0px 0px;\r\n`;\r\nconst StyledSpan = styled.span`\r\n  font-size: 10px;\r\n  color: #505050;\r\n  margin: 10px 0px 0px 5px;\r\n`;\r\nconst ProfileImage = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  margin: 10px 5px 10px 10px;\r\n  border-radius: 6px;\r\n  pointer: cursor;\r\n`;\r\n\r\nconst ChatBox = styled.div`\r\n  color: #212121;\r\n  width: 200px;\r\n  height: 50px;\r\n  margin: 8px 0px;\r\n  margin-bottom: 12px;\r\n  border-radius: 10px;\r\n  border: 1px solid #eaeaea;\r\n  box-sizing: border-box;\r\n  line-height: 50px;\r\n  margin: 0px auto;\r\n`;\r\n\r\nfunction BoardMain() {\r\n  let user = useSelector((state) => state.user.loginSuccess);\r\n  console.log(user);\r\n  return (\r\n    <>\r\n      <Header title=\"자유게시판\" link=\"/board\"></Header>\r\n      <BoardListbox>\r\n        <StyledDiv>\r\n          <HeadTextDiv>게시판 목록</HeadTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/board/loveview\">연애 게시판</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/board/homeview\">가정 게시판</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/board/schoolview\">학업 게시판</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/board/futrueview\">진로 게시판</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/board/companyview\">직장 게시판</ContextTextDiv>\r\n        </StyledDiv>\r\n      </BoardListbox>\r\n      <ChatBox>\r\n        <ContextTextDiv to=\"/chat\">채팅방으로 이동하기</ContextTextDiv>\r\n      </ChatBox>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(BoardMain);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\ChatDetail.js",["318","319","320","321","322"],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Section\\AddChat.js",["323","324","325"],"import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport UpdateTime from \"../../Common/UpdateTime\";\r\nimport profile from \"../../../assets/profile.png\";\r\n\r\nconst BoardBox = styled.div`\r\n  background-color: #fff;\r\n  color: #353535;\r\n  font-size: 13px;\r\n  padding: 14px 12px;\r\n  border: 1px solid #ddd;\r\n  margin: 0px -1px -1px -1px;\r\n`;\r\nconst BoardUser = styled.div`\r\n  display: flex;\r\n  height: 22px;\r\n  margin-top: 2px;\r\n  margin-bottom: 12px;\r\n  justify-content: space-between;\r\n`;\r\nconst BoardUserImg = styled.img`\r\n  width: 22px;\r\n  height: 22px;\r\n  border-radius: 3px;\r\n  margin-right: 6px;\r\n`;\r\nconst BoardUserID = styled.p`\r\n  color: #757575;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  line-height: 22px;\r\n`;\r\nconst BoardTime = styled.div`\r\n  color: #aaa;\r\n  font-size: 12px;\r\n  line-height: 22px;\r\n  padding-left: 8px;\r\n  text-align: left;\r\n`;\r\nconst BoardTitle = styled.div`\r\n  font-weight: bold;\r\n  margin-bottom: 4px;\r\n`;\r\nconst BoardContent = styled.div`\r\n  font-weight: normal;\r\n  margin-bottom: 8px;\r\n  white-space: pre-wrap;\r\n  overflow-wrap: break-word;\r\n`;\r\n// 삭제는 없고 게시판 생성 하는 기능만 제공해줌\r\nfunction AddChat(props) {\r\n  return (\r\n    <>\r\n      <BoardBox key={props.id}>\r\n        {/* BoardView에서 board._id를 넣어주게 된다  boardbox는 게시판 하나 전체를 통칭한다.*/}\r\n        <BoardUser>\r\n          <span style={{ display: \"flex\" }}>\r\n            <BoardTime>\r\n              <UpdateTime time={props.time} />\r\n            </BoardTime>\r\n          </span>\r\n        </BoardUser>\r\n        <Link to={`/chat/chatdetail/${props.id}`}>\r\n          <BoardTitle>{props.title}</BoardTitle>\r\n          <BoardContent>{props.content}</BoardContent>\r\n        </Link>\r\n      </BoardBox>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(AddChat);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\ChatMain.js",["326","327","328","329","330"],"import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../Common/Header\";\r\nimport profile from \"../../assets/profile.png\";\r\n\r\nconst ChatListbox = styled.div`\r\n  color: #212121;\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-bottom: 15px;\r\n  border-radius: 10px;\r\n  border: 1px solid #eaeaea;\r\n  box-sizing: content-box;\r\n`;\r\nconst BestPostBox = styled.div`\r\n  color: #212121;\r\n  width: 100%;\r\n  height: 200px;\r\n  margin: 8px 0px;\r\n  margin-bottom: 12px;\r\n  border-radius: 10px;\r\n  border: 1px solid #eaeaea;\r\n  box-sizing: border-box;\r\n`;\r\nconst StyledDiv = styled.div`\r\n  height: 50px;\r\n  & + & {\r\n    border-top: 1px solid #ddd;\r\n  }\r\n  line-height: 50px;\r\n  cursor: pointer;\r\n`;\r\nconst HeadTextDiv = styled.div`\r\n  color: #505050;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n`;\r\nconst ContextTextDiv = styled(Link)`\r\n  display: block;\r\n  color: #505050;\r\n  text-align: center;\r\n  font-size: 13px;\r\n`;\r\nconst FlexBox = styled.div`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: start;\r\n  margin: 10px 0px 0px 0px;\r\n`;\r\nconst StyledSpan = styled.span`\r\n  font-size: 10px;\r\n  color: #505050;\r\n  margin: 10px 0px 0px 5px;\r\n`;\r\nconst ProfileImage = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  margin: 10px 5px 10px 10px;\r\n  border-radius: 6px;\r\n  pointer: cursor;\r\n`;\r\n\r\nconst ChatBox = styled.div`\r\n  color: #212121;\r\n  width: 200px;\r\n  height: 50px;\r\n  margin: 8px 0px;\r\n  margin-bottom: 12px;\r\n  border-radius: 10px;\r\n  border: 1px solid #eaeaea;\r\n  box-sizing: border-box;\r\n  line-height: 50px;\r\n  margin: 0px auto;\r\n`;\r\n\r\nfunction ChatMain({ match }) {\r\n  return (\r\n    <>\r\n      <Header title=\"채팅방\" link=\"/chat\"></Header>\r\n      <ChatListbox>\r\n        <StyledDiv>\r\n          <HeadTextDiv>채팅방 목록</HeadTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/chat/loveview\">연애 채팅방</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/chat/homeview\">가정 채팅방</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/chat/schoolview\">학업 채팅방</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/chat/futureview\">진로 채팅방</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/chat/companyview\">직장 채팅방</ContextTextDiv>\r\n        </StyledDiv>\r\n      </ChatListbox>\r\n      <ChatBox>\r\n        <ContextTextDiv to=\"/board\">게시판으로 이동하기</ContextTextDiv>\r\n      </ChatBox>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(ChatMain);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Section\\BarChart.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\ChatView.js",["331","332"],"import Pagination from \"@material-ui/lab/Pagination\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport AddChat from \"./Section/AddChat\";\r\nimport Footer from \"../Common/Footer\";\r\nimport HeaderWithStatistic from \"../Common/HeaderWithStatistic\";\r\nimport StyledBox from \"../Style/styledBox\";\r\nimport WriteChat from \"./Section/WriteChat\";\r\nimport { DEV_SERVER } from \"../../Config\";\r\n\r\nconst FlexBox = styled.div`\r\n  display: flex;\r\n  justify-content: start;\r\n  margin: 0px 0px 0px 0px;\r\n`;\r\nconst PaginationBox = styled.div`\r\n  text-align: center;\r\n  margin-top: 1em;\r\n  margin-bottom: 1em;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nlet tempIdx = 1;\r\n\r\nconst ChatView = ({ history, match }) => {\r\n  const [totalPage, settotalPage] = useState(0); //전체 페이지 설정\r\n  const [currentPage, setcurrentPage] = useState(1); //현재 페이지 설정\r\n\r\n  var dt = new Date();\r\n  const [Content, setContent] = useState([]);\r\n\r\n  // 현재 페이지가 변경되면 서버에서 새로운 채팅룸을 가져 오는 함수\r\n  useEffect(() => {\r\n    getChatRoom();\r\n  }, [currentPage]);\r\n\r\n  // 테스트 더미 데이터 추가 하는 함수\r\n  const AddChatRoom = (title) => {\r\n    setContent([\r\n      {\r\n        id: tempIdx++,\r\n        room_title: title,\r\n        create_time: new Date(),\r\n      },\r\n      ...Content,\r\n    ]);\r\n  };\r\n\r\n  const getChatRoom = () => {\r\n    axios\r\n      .get(`${DEV_SERVER}/communicate/view-chats`, { page: currentPage }) //현재 페이지에 관련된 채팅룸을 가져 온다\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setContent(response.data.chat); // 성공한경우 서버에서 준 데이터 안에 있는 채팅을 가지고 와서 세팅해줌\r\n          settotalPage(Math.ceil(response.data.count / 5)); //소수점 이하를 반올림 한다 즉, 한페이지에 5개씩만 보여줄 예정인듯\r\n        } else {\r\n          alert(\"채팅룸을 보여줄 수 없습니다.\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const handlePageChange = (e) => {\r\n    //페이지 바꾸면 벌어지는 이벤트\r\n    const currentPage = parseInt(e.target.textContent);\r\n    setcurrentPage(currentPage);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderWithStatistic title=\"채팅방\" link=\"/chat\" />\r\n      <StyledBox backColor=\"#fafafa\" padding=\"10px 0px\" lineHeight=\"auto\">\r\n        <FlexBox>\r\n          <WriteChat\r\n            link={`/chat/${match.params.view.WriteBoard}`}\r\n            title={\"채팅방 만들기\"}\r\n            addChatRoom={AddChatRoom}\r\n          />\r\n        </FlexBox>\r\n\r\n        {/* 채팅룸 보여주는 부분 */}\r\n        {Content &&\r\n          Content.reverse().map((chat, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <AddChat\r\n                  id={chat.id}\r\n                  title={chat.room_title}\r\n                  content={chat.room_description}\r\n                  time={chat.create_time}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n\r\n        <PaginationBox>\r\n          <Pagination\r\n            count={totalPage}\r\n            page={currentPage}\r\n            onChange={handlePageChange}\r\n            shape=\"rounded\"\r\n            size=\"small\"\r\n            hidePrevButton\r\n            hideNextButton\r\n          />\r\n          {/* 페이지네이션 하는 부분 */}\r\n        </PaginationBox>\r\n        <Footer />\r\n      </StyledBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ChatView);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\MyBoardList.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Nickname.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Email.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\PageList.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Favorite.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Comment.js",["333"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../../Common/Header\";\r\nimport AddBoard from \"../../Board/Section/AddBoard\";\r\nimport StyledBox from \"../../Style/styledBox\";\r\n\r\nconst Warning = styled.p`\r\n  color: #40a940;\r\n  font-size: 15px;\r\n  line-height: 18px;\r\n  font-weight: normal;\r\n  text-align: center;\r\n  padding: 50px 0px;\r\n`;\r\n\r\nfunction Comment() {\r\n  const [CommentsFrom, setCommentsFrom] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMyComments();\r\n  }, []);\r\n\r\n  const getMyComments = () => {\r\n    let userId = window.localStorage.getItem(\"userId\");\r\n    axios\r\n      .post(`/comment/comments`, { userFrom: userId })\r\n      .then((response) => {\r\n        saveOptions(response.data.comments);\r\n      })\r\n      .catch((e) => alert(`댓글을 불러오는데 실패했습니다.`));\r\n  };\r\n\r\n  const saveOptions = (comments) => {\r\n    const commentsList = [];\r\n    comments.forEach((element) => {\r\n      commentsList.push(element.boardFrom);\r\n    });\r\n    setCommentsFrom(\r\n      [...new Set(commentsList.map(JSON.stringify))].map(JSON.parse)\r\n    );\r\n  };\r\n\r\n  const onRemove = (id) => {\r\n    setCommentsFrom(\r\n      CommentsFrom.filter((CommentsFrom) => CommentsFrom._id !== id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"내가 댓글 단 글\" link=\"/board\" backbutton={true} />\r\n      {CommentsFrom.length === 0 && (\r\n        <StyledBox>\r\n          <Warning>댓글 목록이 없습니다.</Warning>\r\n        </StyledBox>\r\n      )}\r\n      {CommentsFrom &&\r\n        CommentsFrom.map((board, index) => {\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <AddBoard\r\n                id={board._id}\r\n                user={board.userFrom}\r\n                time={board.createdAt}\r\n                writer={board.boardWriter}\r\n                title={board.boardTitle}\r\n                content={board.boardContent}\r\n                onRemove={onRemove}\r\n              />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Comment);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Password.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\WithDrawal.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Profile.js",["334","335","336"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../../Common/Header\";\r\nimport Footer from \"../../Common/Footer\";\r\nimport StyledBox from \"../../Style/styledBox\";\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nconst Profilebox = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nfunction Profile() {\r\n  return (\r\n    <>\r\n      <Header title=\"닉네임 설정\" link=\"/board\" backbutton={true} />\r\n      <StyledBox lineHeight=\"40px\">\r\n        <Profilebox>\r\n          <UserProfile boardPage={true} />\r\n          {/* userprofile 부분에 프로필과,아이디,학교등이 들어가게 된다. */}\r\n        </Profilebox>\r\n      </StyledBox>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Profile);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\LogoutButton.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardInput.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\UserProfile.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardTextarea.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CheckNickname.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\AddBoard.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\UserProfile.js",["337"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport profile from \"../../../assets/profile.png\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { DEV_SERVER } from \"../../../Config\";\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 76px;\r\n  height: 76px;\r\n  margin: 24px 0px 4px 0px;\r\n  border-radius: 6px;\r\n  pointer: cursor;\r\n`;\r\nconst Nickname = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-bottom: 4px;\r\n`;\r\nconst ProfileID = styled.div`\r\n  color: #999;\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n`;\r\n\r\nconst UserProfile = function (props) {\r\n  const [User, setUser] = useState({\r\n    userId: \"\",\r\n    userNickname: \"\",\r\n    role: \"\",\r\n  });\r\n  const { userId, userNickname, role } = User;\r\n  const myToken = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    // useEffect를 통해서 값을 갱신해 나간다.\r\n    axios\r\n      .post(`${DEV_SERVER}/user/profile`, { token: myToken }) //profile에 관한 api를 사용하여 _id가 userFrom인 것을 가지고 온다\r\n      .then((response) => {\r\n        setUser({\r\n          //만약 성공했으면, 데이터를 가지고 오게 되고, 성공한 데이터에 있는 id,nickname,school을 가지고 오게 된다\r\n          userId: response.data.userid,\r\n          userNickname: response.data.nickname,\r\n          role: response.data.gubun,\r\n        });\r\n        window.localStorage.setItem(\"userNickname\", response.data.nickname);\r\n      });\r\n  }, []);\r\n\r\n  if (props.boardPage) {\r\n    //Boardview에 있는 userProfile에서 boardpage = true를 받아오게 된다면\r\n    return (\r\n      <div>\r\n        <Link to=\"/MyPage\">\r\n          {/* 내 페이지로 갈 수 있게 해주는 link */}\r\n          <ProfileImage src={profile} alt=\"profile\"></ProfileImage>\r\n          {/* styled.img이기 때문에 img 처럼 쓰이면 됨 */}\r\n        </Link>\r\n        <Nickname>{userNickname}</Nickname>\r\n        {/* 닉네임 표시해주는 곳 */}\r\n        <ProfileID>{userId}</ProfileID>\r\n        <ProfileID>{role === 0 ? \"일반 사용자\" : \"상담사\"}</ProfileID>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withRouter(UserProfile);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageTitle.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\Footer.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageInput.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageButton.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Section\\WriteChat.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\HeaderWithStatistic.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\UpdateTime.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Input.js",["338"],"import React from \"react\";\r\nimport \"./Input.css\";\r\nimport send from \"../../assets/send.jpg\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Send = styled.img`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 52px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Input = ({ message, setMessage, sendMessage }) => (\r\n  // props로 message,setMessage,sendMessage 3개를 받아온다.\r\n\r\n  //   return <div className=\"Input\"></div>;\r\n  // <form className=\"inputForm\">\r\n  <div className=\"inputContainer\">\r\n    <input\r\n      className=\"input\"\r\n      type=\"text\"\r\n      placeholder=\"메세지를 입력하세요\"\r\n      value={message}\r\n      onChange={(e) => setMessage(e.target.value)}\r\n      onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\r\n    />\r\n    <button onClick={(e) => sendMessage(e)}>\r\n      <Send src={send} />\r\n    </button>\r\n  </div>\r\n  // </form>\r\n);\r\nexport default Input;\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\RoomInfo.js",["339"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RoomInfo.css\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction RoomInfo({ room }) {\r\n  return (\r\n    <div className=\"roomInfo\">\r\n      <div className=\"leftInfo\">\r\n        <h3 className=\"leftInfo-text\">{`Room : ${room}`}</h3>\r\n      </div>\r\n      <div className=\"rightInfo\">\r\n        <Button\r\n          className=\"infoButton\"\r\n          // variant=\"contained\"\r\n          variant=\"raised\"\r\n          href=\"/board\"\r\n          color=\"inherit\"\r\n        >\r\n          exit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomInfo;\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\AddComment.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardSubmit.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CommentInput.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BestPost.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\WriteBoard.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Messages\\Messages.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\LikeButton.js",["340"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport vote from \"../../../assets/vote.png\";\r\n\r\nconst ButtonImage = styled.img`\r\n  width: 12px;\r\n  height: 12px;\r\n  margin-left: 10px;\r\n`;\r\nconst LikeCounted = styled.p`\r\n  display: inline-block;\r\n  color: #c62917;\r\n  font-size: 13px;\r\n  padding-left: 4px;\r\n`;\r\n\r\nfunction LikeButton({boardId, boardTitle, boardContent, boardWriter}) {\r\n  const userFrom = localStorage.getItem(\"userId\");\r\n  const [likeCounts, setLikeCounts] = useState(0);\r\n  const [userLiked, setUserLiked] = useState(false);\r\n\r\n  let variables = {\r\n    userFrom: userFrom,\r\n    boardFrom: boardId,\r\n    boardWriter: boardWriter,\r\n    boardTitle: boardTitle,\r\n    boardContent: boardContent,\r\n  };\r\n\r\n  const getLikeInfo = () => {\r\n    axios\r\n      .post(\"/like/likeCounts\", variables)\r\n      .then((response) => {\r\n        if (!response.data.success) {\r\n          alert(\"좋아요 정보를 가져오는데 실패했습니다.\");\r\n          return;\r\n        }\r\n        let responsedData = response.data.likeCounts;\r\n        setLikeCounts(responsedData);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const ifUserHasLiked = () => {\r\n    axios\r\n      .post(\"/like/liked\", variables)\r\n      .then((response) => {\r\n        if (!response.data.success) {\r\n          alert(\"좋아요 정보를 가져오는데 실패했습니다.\");\r\n          return;\r\n        }\r\n        let responsedData = response.data.liked;\r\n        setUserLiked(responsedData);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const changeToDislike = () => {\r\n    axios\r\n      .post(`/like/dislike`, variables)\r\n      .then((response) => {\r\n        if (!response.data.success) {\r\n          alert(\"좋아요 삭제를 실패했습니다.\");\r\n          return;\r\n        }\r\n        setLikeCounts(likeCounts - 1);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const changeToLike = () => {\r\n    axios\r\n      .post(`/like`, variables)\r\n      .then((response) => {\r\n        if (!response.data.success) {\r\n          alert(\"좋아요 등록을 실패했습니다.\");\r\n          return;\r\n        }\r\n        setLikeCounts(likeCounts + 1);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const handleLike = (event) => {\r\n    event.preventDefault();\r\n    userLiked ? changeToDislike() : changeToLike();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLikeInfo();\r\n    ifUserHasLiked();\r\n  },[likeCounts, userLiked]);\r\n\r\n  return (\r\n    <>\r\n      <button onClick={handleLike}>\r\n        <ButtonImage src={vote} alt=\"vote\" />\r\n        <LikeCounted>{likeCounts}</LikeCounted>\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LikeButton;\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CommentButton.js",["341"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport comment from '../../../assets/comment.png';\r\n\r\nconst ButtonImage = styled.img`\r\n  width: 12px;\r\n  height: 12px;\r\n  margin-left: 10px;\r\n`\r\nconst CommentCounted = styled.p`\r\n  display: inline-block;\r\n  color: #0ca5af;\r\n  font-size: 13px;\r\n  padding-left: 4px;\r\n`\r\n\r\nfunction CommentButton({boardId}) {\r\n  const userFrom = localStorage.getItem(\"userId\");\r\n  const [CommentCounts, setCommentCounts] = useState(0);\r\n  let variables = {\r\n    userFrom: userFrom,\r\n    boardFrom: boardId,\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"/comment/getComment\", variables)\r\n      .then((response) => {\r\n        if(response.data.success) {\r\n          setCommentCounts(response.data.commentCounts);\r\n        } else {\r\n          alert(\"댓글을 보여줄 수 없습니다.\");\r\n        }\r\n      })\r\n  },[])\r\n  return (\r\n    <button>\r\n        <ButtonImage src={comment} alt=\"comment\" />\r\n        <CommentCounted>{CommentCounts}</CommentCounted>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CommentButton;\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\DeleteBoard.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\DeleteComment.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Messages\\Message\\Message.js",[],{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","replacedBy":"345"},{"ruleId":"346","severity":1,"message":"347","line":2,"column":23,"nodeType":"348","messageId":"349","endLine":2,"endColumn":34},{"ruleId":"346","severity":1,"message":"350","line":2,"column":22,"nodeType":"348","messageId":"349","endLine":2,"endColumn":33},{"ruleId":"346","severity":1,"message":"351","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":15},{"ruleId":"346","severity":1,"message":"350","line":2,"column":22,"nodeType":"348","messageId":"349","endLine":2,"endColumn":33},{"ruleId":"346","severity":1,"message":"352","line":70,"column":7,"nodeType":"348","messageId":"349","endLine":70,"endColumn":19},{"ruleId":"346","severity":1,"message":"353","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":14},{"ruleId":"346","severity":1,"message":"354","line":7,"column":8,"nodeType":"348","messageId":"349","endLine":7,"endColumn":18},{"ruleId":"346","severity":1,"message":"355","line":8,"column":8,"nodeType":"348","messageId":"349","endLine":8,"endColumn":21},{"ruleId":"346","severity":1,"message":"356","line":9,"column":8,"nodeType":"348","messageId":"349","endLine":9,"endColumn":21},{"ruleId":"346","severity":1,"message":"357","line":10,"column":8,"nodeType":"348","messageId":"349","endLine":10,"endColumn":19},{"ruleId":"346","severity":1,"message":"358","line":14,"column":8,"nodeType":"348","messageId":"349","endLine":14,"endColumn":19},{"ruleId":"346","severity":1,"message":"359","line":16,"column":8,"nodeType":"348","messageId":"349","endLine":16,"endColumn":16},{"ruleId":"346","severity":1,"message":"347","line":17,"column":10,"nodeType":"348","messageId":"349","endLine":17,"endColumn":21},{"ruleId":"360","severity":1,"message":"361","line":39,"column":6,"nodeType":"362","endLine":39,"endColumn":19,"suggestions":"363"},{"ruleId":"360","severity":1,"message":"364","line":69,"column":6,"nodeType":"362","endLine":69,"endColumn":8,"suggestions":"365"},{"ruleId":"346","severity":1,"message":"366","line":15,"column":7,"nodeType":"348","messageId":"349","endLine":15,"endColumn":18},{"ruleId":"346","severity":1,"message":"367","line":45,"column":7,"nodeType":"348","messageId":"349","endLine":45,"endColumn":14},{"ruleId":"346","severity":1,"message":"368","line":51,"column":7,"nodeType":"348","messageId":"349","endLine":51,"endColumn":17},{"ruleId":"346","severity":1,"message":"369","line":56,"column":7,"nodeType":"348","messageId":"349","endLine":56,"endColumn":19},{"ruleId":"346","severity":1,"message":"370","line":1,"column":38,"nodeType":"348","messageId":"349","endLine":1,"endColumn":48},{"ruleId":"346","severity":1,"message":"350","line":12,"column":10,"nodeType":"348","messageId":"349","endLine":12,"endColumn":21},{"ruleId":"346","severity":1,"message":"371","line":12,"column":23,"nodeType":"348","messageId":"349","endLine":12,"endColumn":33},{"ruleId":"346","severity":1,"message":"372","line":42,"column":10,"nodeType":"348","messageId":"349","endLine":42,"endColumn":15},{"ruleId":"360","severity":1,"message":"373","line":48,"column":3,"nodeType":"348","endLine":48,"endColumn":12,"suggestions":"374"},{"ruleId":"346","severity":1,"message":"375","line":5,"column":8,"nodeType":"348","messageId":"349","endLine":5,"endColumn":15},{"ruleId":"346","severity":1,"message":"376","line":22,"column":7,"nodeType":"348","messageId":"349","endLine":22,"endColumn":19},{"ruleId":"346","severity":1,"message":"377","line":28,"column":7,"nodeType":"348","messageId":"349","endLine":28,"endColumn":18},{"ruleId":"346","severity":1,"message":"375","line":5,"column":8,"nodeType":"348","messageId":"349","endLine":5,"endColumn":15},{"ruleId":"346","severity":1,"message":"366","line":16,"column":7,"nodeType":"348","messageId":"349","endLine":16,"endColumn":18},{"ruleId":"346","severity":1,"message":"367","line":46,"column":7,"nodeType":"348","messageId":"349","endLine":46,"endColumn":14},{"ruleId":"346","severity":1,"message":"368","line":52,"column":7,"nodeType":"348","messageId":"349","endLine":52,"endColumn":17},{"ruleId":"346","severity":1,"message":"369","line":57,"column":7,"nodeType":"348","messageId":"349","endLine":57,"endColumn":19},{"ruleId":"346","severity":1,"message":"378","line":32,"column":7,"nodeType":"348","messageId":"349","endLine":32,"endColumn":9},{"ruleId":"360","severity":1,"message":"379","line":38,"column":6,"nodeType":"362","endLine":38,"endColumn":19,"suggestions":"380"},{"ruleId":"360","severity":1,"message":"381","line":23,"column":6,"nodeType":"362","endLine":23,"endColumn":8,"suggestions":"382"},{"ruleId":"346","severity":1,"message":"383","line":1,"column":17,"nodeType":"348","messageId":"349","endLine":1,"endColumn":26},{"ruleId":"346","severity":1,"message":"384","line":1,"column":28,"nodeType":"348","messageId":"349","endLine":1,"endColumn":36},{"ruleId":"346","severity":1,"message":"385","line":3,"column":8,"nodeType":"348","messageId":"349","endLine":3,"endColumn":13},{"ruleId":"360","severity":1,"message":"386","line":48,"column":6,"nodeType":"362","endLine":48,"endColumn":8,"suggestions":"387"},{"ruleId":"346","severity":1,"message":"388","line":5,"column":8,"nodeType":"348","messageId":"349","endLine":5,"endColumn":14},{"ruleId":"346","severity":1,"message":"353","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":14},{"ruleId":"360","severity":1,"message":"389","line":93,"column":5,"nodeType":"362","endLine":93,"endColumn":28,"suggestions":"390"},{"ruleId":"360","severity":1,"message":"391","line":35,"column":5,"nodeType":"362","endLine":35,"endColumn":7,"suggestions":"392"},"no-native-reassign",["393"],"no-negated-in-lhs",["394"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'ROOT_SERVER' is defined but never used.","'addChat' is defined but never used.","'Statisticbtn' is assigned a value but never used.","'Link' is defined but never used.","'BoardInput' is defined but never used.","'CheckNickname' is defined but never used.","'BoardTextarea' is defined but never used.","'UserProfile' is defined but never used.","'BoardSubmit' is defined but never used.","'BestPost' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'FetchBoard'. Either include it or remove the dependency array.","ArrayExpression",["395"],"React Hook useEffect has missing dependencies: 'BoardId', 'FetchComment', and 'props.match.path'. Either include them or remove the dependency array.",["396"],"'BestPostBox' is assigned a value but never used.","'FlexBox' is assigned a value but never used.","'StyledSpan' is assigned a value but never used.","'ProfileImage' is assigned a value but never used.","'useReducer' is defined but never used.","'DEV_SERVER' is defined but never used.","'users' is assigned a value but never used.","React Hook useEffect contains a call to 'setName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [location.search, ENDPOINT] as a second argument to the useEffect Hook.",["397"],"'profile' is defined but never used.","'BoardUserImg' is assigned a value but never used.","'BoardUserID' is assigned a value but never used.","'dt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getChatRoom'. Either include it or remove the dependency array.",["398"],"React Hook useEffect has a missing dependency: 'getMyComments'. Either include it or remove the dependency array.",["399"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'myToken'. Either include it or remove the dependency array.",["400"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'getLikeInfo' and 'ifUserHasLiked'. Either include them or remove the dependency array.",["401"],"React Hook useEffect has a missing dependency: 'variables'. Either include it or remove the dependency array.",["402"],"no-global-assign","no-unsafe-negation",{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},"Update the dependencies array to be: [FetchBoard, currentPage]",{"range":"419","text":"420"},"Update the dependencies array to be: [BoardId, FetchComment, props.match.path]",{"range":"421","text":"422"},"Add dependencies array: [location.search, ENDPOINT]",{"range":"423","text":"424"},"Update the dependencies array to be: [currentPage, getChatRoom]",{"range":"425","text":"426"},"Update the dependencies array to be: [getMyComments]",{"range":"427","text":"428"},"Update the dependencies array to be: [myToken]",{"range":"429","text":"430"},"Update the dependencies array to be: [getLikeInfo, ifUserHasLiked, likeCounts, userLiked]",{"range":"431","text":"432"},"Update the dependencies array to be: [variables]",{"range":"433","text":"434"},[1388,1401],"[FetchBoard, currentPage]",[2091,2093],"[BoardId, FetchComment, props.match.path]",[2312,2312],", [location.search, ENDPOINT]",[1124,1137],"[currentPage, getChatRoom]",[609,611],"[getMyComments]",[1397,1399],"[myToken]",[2355,2378],"[getLikeInfo, ifUserHasLiked, likeCounts, userLiked]",[900,902],"[variables]"]