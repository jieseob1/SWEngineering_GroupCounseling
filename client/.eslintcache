[{"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\index.js":"1","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\reportWebVitals.js":"2","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\serviceWorker.js":"3","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\App.js":"4","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_reducers\\index.js":"5","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\MyPage.js":"6","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Board.js":"7","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Login.js":"8","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Register.js":"9","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Chat.js":"10","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\hoc\\auth.js":"11","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardMain.js":"12","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardDetail.js":"13","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_reducers\\user_reducers.js":"14","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardView.js":"15","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Password.js":"16","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\PageList.js":"17","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Email.js":"18","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Nickname.js":"19","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Favorite.js":"20","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\MyBoardList.js":"21","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Comment.js":"22","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Profile.js":"23","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Login\\LoginButton.js":"24","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\WithDrawal.js":"25","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\WriteBoardPage.js":"26","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Login\\LoginInput.js":"27","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_actions\\user_actions.js":"28","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\styledBox.js":"29","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\styledContainer.js":"30","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\Header.js":"31","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\ChcekIdButton.js":"32","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\LimitOnLength.js":"33","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterButton.js":"34","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterSelect.js":"35","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\RoomInfo.js":"36","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterInput.js":"37","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Messages\\Messages.js":"38","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Input.js":"39","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\AddBoard.js":"40","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CommentInput.js":"41","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CheckNickname.js":"42","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\AddComment.js":"43","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardInput.js":"44","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\Footer.js":"45","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\UserProfile.js":"46","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardTextarea.js":"47","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\WriteBoard.js":"48","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardSubmit.js":"49","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BestPost.js":"50","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\DeleteBoard.js":"51","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\UpdateTime.js":"52","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CommentButton.js":"53","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageInput.js":"54","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\DeleteComment.js":"55","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageTitle.js":"56","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageButton.js":"57","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\LikeButton.js":"58","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\LogoutButton.js":"59","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\UserProfile.js":"60","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Messages\\Message\\Message.js":"61"},{"size":915,"mtime":1637974657155,"results":"62","hashOfConfig":"63"},{"size":375,"mtime":1637974657158,"results":"64","hashOfConfig":"63"},{"size":5124,"mtime":1637974657159,"results":"65","hashOfConfig":"63"},{"size":1114,"mtime":1638633511263,"results":"66","hashOfConfig":"63"},{"size":157,"mtime":1636557557366,"results":"67","hashOfConfig":"63"},{"size":1370,"mtime":1637974657158,"results":"68","hashOfConfig":"63"},{"size":993,"mtime":1638633511276,"results":"69","hashOfConfig":"63"},{"size":2876,"mtime":1636557557580,"results":"70","hashOfConfig":"63"},{"size":5596,"mtime":1638633511282,"results":"71","hashOfConfig":"63"},{"size":3723,"mtime":1638633511277,"results":"72","hashOfConfig":"63"},{"size":883,"mtime":1636557557564,"results":"73","hashOfConfig":"63"},{"size":2703,"mtime":1637974657124,"results":"74","hashOfConfig":"63"},{"size":5112,"mtime":1637974657122,"results":"75","hashOfConfig":"63"},{"size":715,"mtime":1636557557369,"results":"76","hashOfConfig":"63"},{"size":7439,"mtime":1638633511265,"results":"77","hashOfConfig":"63"},{"size":4190,"mtime":1637974657152,"results":"78","hashOfConfig":"63"},{"size":1670,"mtime":1637974657147,"results":"79","hashOfConfig":"63"},{"size":3129,"mtime":1638633511274,"results":"80","hashOfConfig":"63"},{"size":2232,"mtime":1637974657151,"results":"81","hashOfConfig":"63"},{"size":1773,"mtime":1637974657149,"results":"82","hashOfConfig":"63"},{"size":1975,"mtime":1637974657150,"results":"83","hashOfConfig":"63"},{"size":2174,"mtime":1637974657148,"results":"84","hashOfConfig":"63"},{"size":884,"mtime":1637974657152,"results":"85","hashOfConfig":"63"},{"size":481,"mtime":1636557557476,"results":"86","hashOfConfig":"63"},{"size":2281,"mtime":1636557557516,"results":"87","hashOfConfig":"63"},{"size":2837,"mtime":1637974657131,"results":"88","hashOfConfig":"63"},{"size":631,"mtime":1636557557480,"results":"89","hashOfConfig":"63"},{"size":1303,"mtime":1638633511264,"results":"90","hashOfConfig":"63"},{"size":671,"mtime":1637974657154,"results":"91","hashOfConfig":"63"},{"size":382,"mtime":1636557557560,"results":"92","hashOfConfig":"63"},{"size":2220,"mtime":1637974657146,"results":"93","hashOfConfig":"63"},{"size":568,"mtime":1636557557520,"results":"94","hashOfConfig":"63"},{"size":268,"mtime":1636557557525,"results":"95","hashOfConfig":"63"},{"size":532,"mtime":1636557557528,"results":"96","hashOfConfig":"63"},{"size":984,"mtime":1636557557536,"results":"97","hashOfConfig":"63"},{"size":647,"mtime":1638633511273,"results":"98","hashOfConfig":"63"},{"size":884,"mtime":1636557557532,"results":"99","hashOfConfig":"63"},{"size":350,"mtime":1638633511271,"results":"100","hashOfConfig":"63"},{"size":757,"mtime":1638633511269,"results":"101","hashOfConfig":"63"},{"size":2773,"mtime":1636557557414,"results":"102","hashOfConfig":"63"},{"size":508,"mtime":1636557557439,"results":"103","hashOfConfig":"63"},{"size":1028,"mtime":1637974657129,"results":"104","hashOfConfig":"63"},{"size":1825,"mtime":1636557557419,"results":"105","hashOfConfig":"63"},{"size":502,"mtime":1637974657127,"results":"106","hashOfConfig":"63"},{"size":679,"mtime":1637974657145,"results":"107","hashOfConfig":"63"},{"size":2033,"mtime":1636557557455,"results":"108","hashOfConfig":"63"},{"size":671,"mtime":1637974657128,"results":"109","hashOfConfig":"63"},{"size":967,"mtime":1637974657131,"results":"110","hashOfConfig":"63"},{"size":1302,"mtime":1638633511267,"results":"111","hashOfConfig":"63"},{"size":1676,"mtime":1637974657126,"results":"112","hashOfConfig":"63"},{"size":939,"mtime":1637974657130,"results":"113","hashOfConfig":"63"},{"size":799,"mtime":1636557557472,"results":"114","hashOfConfig":"63"},{"size":1076,"mtime":1636557557435,"results":"115","hashOfConfig":"63"},{"size":412,"mtime":1636557557549,"results":"116","hashOfConfig":"63"},{"size":900,"mtime":1636557557447,"results":"117","hashOfConfig":"63"},{"size":370,"mtime":1636557557553,"results":"118","hashOfConfig":"63"},{"size":493,"mtime":1638633511275,"results":"119","hashOfConfig":"63"},{"size":2613,"mtime":1636557557451,"results":"120","hashOfConfig":"63"},{"size":716,"mtime":1636557557468,"results":"121","hashOfConfig":"63"},{"size":2135,"mtime":1637974657153,"results":"122","hashOfConfig":"63"},{"size":809,"mtime":1638633511269,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"72edzb",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"126"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"126"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"126"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"126"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"126"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"126"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\index.js",[],["257","258"],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\reportWebVitals.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\serviceWorker.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\App.js",["259"],"import styled from \"styled-components\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Board from \"./pages/Board\";\r\nimport BoardDetail from \"./components/Board/BoardDetail\";\r\nimport MyPage from \"./pages/MyPage\";\r\nimport Chat from \"./pages/Chat\";\r\nimport Auth from \"./hoc/auth\";\r\nimport BoardMain from \"./components/Board/BoardMain\";\r\n\r\nconst Container = styled.div`\r\n  margin: 10px auto;\r\n  width: 370px;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(Login, false)}></Route>\r\n          <Route path=\"/register\" component={Auth(Register, false)} />\r\n          <Route path=\"/board\" component={Auth(Board, true)} />\r\n          <Route path=\"/board/:boardId\" component={Auth(BoardDetail, true)} />\r\n          <Route path=\"/chat\" component={Auth(Chat, true)} />\r\n          <Route path=\"/mypage\" component={Auth(MyPage, true)} />\r\n        </Switch>\r\n      </Router>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_reducers\\index.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\MyPage.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Board.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Login.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Register.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\pages\\Chat.js",["260","261","262","263","264","265","266","267","268","269","270","271"],"import React, { useEffect, useState, useReducer } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Chat.css\";\r\nimport styled from \"styled-components\";\r\nimport send from \"../assets/send.jpg\";\r\n\r\n// 하위 컴포넌트\r\nimport Messages from \"../components/Chat/Messages/Messages\";\r\nimport RoomInfo from \"../components/Chat/RoomInfo\";\r\nimport Input from \"../components/Chat//Input\";\r\nimport Header from \"../components/Common/Header\";\r\nimport StyledContainer from \"../components/Style/styledContainer\";\r\nimport StyledBox from \"../components/Style/styledBox\";\r\n\r\n// Material-ui\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst Chatbox = styled.div`\r\n  color: #212121;\r\n  width: 100%;\r\n  height: 500px;\r\n  border: 1px solid #eaeaea;\r\n  box-sizing: content-box;\r\n`;\r\n\r\nconst HeadTextDiv = styled.div`\r\n  height: 75px;\r\n  color: #505050;\r\n  line-height: 75px;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  border-bottom: 1px solid #ddd;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst FootTextDiv = styled.div`\r\n  height: 75px;\r\n  display: flex;\r\n  font-size: 5px;\r\n`;\r\n\r\nconst ChatDiv = styled.div`\r\n  height: 350px;\r\n  border-bottom: 1px solid #ddd;\r\n`;\r\n\r\nconst Send = styled.img`\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n  width: 50px;\r\n  height: 50px;\r\n`;\r\n\r\nconst style = {\r\n  width: \"500px\",\r\n  height: \"50px\",\r\n  marginLeft: \"10px\",\r\n};\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  /*\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const [users, setUsers] = useState(\"\");\r\n  \r\n  const ENDPOINT = \"https://lamachat.herokuapp.com/\";\r\n\r\n  useEffect(() => {\r\n    // query-string middleware의 사용\r\n    // const data = queryString.parse(location.search);\r\n    // console.log(location.search); // ?name=lama&room=peru\r\n    // console.log(data); // 객체 : {name: \"lama\", room: \"peru\"}\r\n    // 다시 정리\r\n    \r\n    const { name, room } = queryString.parse(location.search);\r\n\r\n    socket = io(ENDPOINT); // 소켓 연결\r\n\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    console.log(name, room); // lama peru\r\n\r\n    // console.log(socket);\r\n    socket.emit(\"join\", { name, room }, (error) => {\r\n      // console.log(\"error\");\r\n      // 에러 처리\r\n      if (error) {\r\n        alert(error);\r\n      }\r\n    });\r\n\r\n    // return () => {\r\n    //   socket.emit(\"disconnect\");\r\n\r\n    //   socket.off();\r\n    // };\r\n  }, [ENDPOINT, location.search]); // 한번만 부른다 // 불필요한 사이드 이펙트를 줄인다\r\n\r\n  useEffect(() => {\r\n    \r\n    // 서버에서 message 이벤트가 올 경우에 대해서 `on`\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n  }, [messages]);\r\n\r\n  // 메세지 보내기 함수\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, setMessage(\"\"));\r\n    }\r\n  };\r\n\r\n  console.log(message, messages);\r\n  console.log(users, \"users\");\r\n\r\n  // return <h1>Chat</h1>;\r\n  // 1.roominfo\r\n  // 2.messages\r\n  // 3.input\r\n*/\r\n  return (\r\n    <>\r\n      <Header title=\"채팅방\" link=\"/board\"></Header>\r\n      <Chatbox>\r\n        <HeadTextDiv>Room: undefined</HeadTextDiv>\r\n        <ChatDiv></ChatDiv>\r\n        <FootTextDiv>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"메세지를 입력하세요\"\r\n            style={style}\r\n          ></input>\r\n          <Send src={send} />\r\n        </FootTextDiv>\r\n      </Chatbox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\hoc\\auth.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardMain.js",["272","273","274","275","276"],"import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../Common/Header\";\r\nimport profile from \"../../assets/profile.png\";\r\n\r\nconst BoardListbox = styled.div`\r\n  color: #212121;\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-bottom: 15px;\r\n  border-radius: 10px;\r\n  border: 1px solid #eaeaea;\r\n  box-sizing: content-box;\r\n`;\r\nconst BestPostBox = styled.div`\r\n  color: #212121;\r\n  width: 100%;\r\n  height: 200px;\r\n  margin: 8px 0px;\r\n  margin-bottom: 12px;\r\n  border-radius: 10px;\r\n  border: 1px solid #eaeaea;\r\n  box-sizing: border-box;\r\n`;\r\nconst StyledDiv = styled.div`\r\n  height: 50px;\r\n  & + & {\r\n    border-top: 1px solid #ddd;\r\n  }\r\n  line-height: 50px;\r\n  cursor: pointer;\r\n`;\r\nconst HeadTextDiv = styled.div`\r\n  color: #505050;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n`;\r\nconst ContextTextDiv = styled(Link)`\r\n  display: block;\r\n  color: #505050;\r\n  text-align: center;\r\n  font-size: 13px;\r\n`;\r\nconst FlexBox = styled.div`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: start;\r\n  margin: 10px 0px 0px 0px;\r\n`;\r\nconst StyledSpan = styled.span`\r\n  font-size: 10px;\r\n  color: #505050;\r\n  margin: 10px 0px 0px 5px;\r\n`;\r\nconst ProfileImage = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  margin: 10px 5px 10px 10px;\r\n  border-radius: 6px;\r\n  pointer: cursor;\r\n`;\r\n\r\nconst ChatBox = styled.div`\r\n  color: #212121;\r\n  width: 200px;\r\n  height: 50px;\r\n  margin: 8px 0px;\r\n  margin-bottom: 12px;\r\n  border-radius: 10px;\r\n  border: 1px solid #eaeaea;\r\n  box-sizing: border-box;\r\n  line-height: 50px;\r\n  margin: 0px auto;\r\n`;\r\n\r\nfunction BoardMain() {\r\n  return (\r\n    <>\r\n      <Header title=\"자유게시판\" link=\"/board\"></Header>\r\n      <BoardListbox>\r\n        <StyledDiv>\r\n          <HeadTextDiv>게시판 목록</HeadTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/board/loveview\">연애 게시판</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/board/homeview\">가정 게시판</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/board/schoolview\">학업 게시판</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/board/futrueview\">진로 게시판</ContextTextDiv>\r\n        </StyledDiv>\r\n        <StyledDiv>\r\n          <ContextTextDiv to=\"/board/companyview\">직장 게시판</ContextTextDiv>\r\n        </StyledDiv>\r\n      </BoardListbox>\r\n      <ChatBox>\r\n        <ContextTextDiv to=\"/chat\">채팅방으로 이동하기</ContextTextDiv>\r\n      </ChatBox>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(BoardMain);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardDetail.js",["277"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../Common/Header\";\r\nimport AddBoard from \"./Section/AddBoard\";\r\nimport AddComment from \"./Section/AddComment\";\r\nimport CommentInput from \"./Section/CommentInput\";\r\nimport CheckNickname from \"./Section/CheckNickname\";\r\nimport menu from \"../../assets/menu.png\";\r\n\r\nconst CommentForm = styled.form`\r\n  position: relative;\r\n  background-color: #fafafa;\r\n  margin: 0px -1px;\r\n  box-sizing: border-box;\r\n`;\r\nconst BackButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  border: 1px solid #c62917;\r\n  border-radius: 4px;\r\n  width: 24%;\r\n  height: 36px;\r\n  margin: 12px 0px;\r\n`;\r\nconst BackTitle = styled.span`\r\n  color: #c62917;\r\n  font-size: 13px;\r\n  line-height: 36px;\r\n  text-align: center;\r\n`;\r\nconst MenuIcon = styled.img`\r\n  width: 12px;\r\n  height: 12px;\r\n  padding: 12px 0px;\r\n  margin-right: 4px;\r\n`\r\n// 게시판 디테일을 보여준다\r\n\r\n\r\nfunction BoardDetail(props) {\r\n  const BoardId = props.match.params.id; //Board에 {match.path}/:id가 되어 있고, 여기서 match.params.id라는 것은 params안에 있는 변수중 id 값을 가지고 온다고 하는 것이다\r\n  //addboard 부분 확인 하면 된다\r\n  const userFrom = localStorage.getItem(\"userId\");\r\n  const writerFrom = localStorage.getItem(\"userNickname\");\r\n  const [Comments, setComments] = useState([]);\r\n  const [BoardDetail, setBoardDetail] = useState([]);\r\n  const [BoardWriter, setBoardWriter] = useState(\"익명\");\r\n  const [WriterIcon, setWriterIcon] = useState(true);\r\n  const [Value, setValue] = useState(\"\");\r\n  let variables = {\r\n    userFrom: userFrom, //유저 아이디를 넣어주게 되고\r\n    boardFrom: BoardId,\r\n    commentContent: Value,\r\n    commentWriter: BoardWriter,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variable = { boardId: BoardId };\r\n    axios.post(`${props.match.path}`, variable).then((response) => {\r\n      if (response.data.success) {\r\n        setBoardDetail([response.data.board]);\r\n      } else {\r\n        alert(\"게시글 가져오기에 실패했습니다.\");\r\n      }\r\n    });\r\n    FetchComment(); //댓글 가져오기 실행\r\n  }, []);\r\n\r\n  const FetchComment = () => {\r\n    axios.post(\"/comment/getComment\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        setComments(response.data.comments);\r\n      } else {\r\n        alert(\"댓글을 보여줄 수 없습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onIconClick = () => {\r\n    if (WriterIcon) {\r\n      setWriterIcon(false);\r\n      setBoardWriter(writerFrom);\r\n    } else {\r\n      setWriterIcon(true);\r\n      setBoardWriter(\"익명\");\r\n    }\r\n  };\r\n  const onRemoveBoard = (id) => {\r\n    setBoardDetail(BoardDetail.filter((BoardDetail) => BoardDetail._id !== id));\r\n    props.history.push(\"/\");\r\n  };\r\n  const onRemoveComment = (id) => {\r\n    setComments(Comments.filter((Comments) => Comments._id !== id));\r\n  };\r\n  const onChange = (e) => {\r\n    setValue(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios.post(\"/comment/upload\", variables).then((response) => {\r\n      alert(\"댓글이 등록되었습니다.\");\r\n      setValue(\"\");\r\n      FetchComment();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"자유게시판\" link=\"/board\" />\r\n      {BoardDetail &&\r\n        BoardDetail.map((board, index) => {\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <AddBoard\r\n                id={board._id}\r\n                user={board.userFrom}\r\n                time={board.createdAt}\r\n                writer={board.boardWriter}\r\n                title={board.boardTitle}\r\n                content={board.boardContent}\r\n                history={`${props.history}`}\r\n                onRemove={onRemoveBoard}\r\n              />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n\r\n      <CommentForm onSubmit={onSubmit}>\r\n        <CommentInput\r\n          name=\"Comment\"\r\n          placeholder=\"댓글을 작성해주세요.\"\r\n          value={Value}\r\n          onChange={onChange}\r\n        />\r\n        <CheckNickname\r\n          left=\"284px\"\r\n          icon={WriterIcon}\r\n          click={onIconClick}\r\n          submit={onSubmit}\r\n        />\r\n      </CommentForm>\r\n      {Comments &&\r\n        Comments.map((comment, index) => {\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <AddComment // comment 부분\r\n                id={comment._id}\r\n                user={comment.userFrom}\r\n                time={comment.createdAt}\r\n                writer={comment.commentWriter}\r\n                content={comment.commentContent}\r\n                onRemove={onRemoveComment}\r\n              />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      <Link to=\"/board\">\r\n        <BackButton>\r\n          <MenuIcon src={menu} alt=\"menu\" />\r\n          <BackTitle>글 목록</BackTitle>\r\n        </BackButton>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(BoardDetail);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_reducers\\user_reducers.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\BoardView.js",["278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport StyledBox from \"../Style/styledBox\";\r\nimport AddBoard from \"./Section/AddBoard\";\r\nimport BoardInput from \"./Section/BoardInput\";\r\nimport CheckNickname from \"./Section/CheckNickname\";\r\nimport BoardTextarea from \"./Section/BoardTextarea\";\r\nimport UserProfile from \"./Section/UserProfile\";\r\nimport Header from \"../Common/Header\";\r\nimport Footer from \"../Common/Footer\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport BoardSubmit from \"./Section/BoardSubmit\";\r\nimport WriteBoard from \"./Section/WriteBoard\";\r\nimport BestPost from \"./Section/BestPost\";\r\n\r\nconst Profilebox = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-bottom: 8px;\r\n`;\r\nconst Profilebtn = styled.div`\r\n  display: inline-block;\r\n  width: 64px;\r\n  height: 28px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  margin: 12px 4px;\r\n  font-size: 13px;\r\n  line-height: 28px;\r\n  color: #505050;\r\n  pointer: cursor;\r\n`;\r\n/*제목과 내용 쓰는 칸 + submit 칸*/\r\nconst BoardForm = styled.form`\r\n  position: relative;\r\n  height: 165px;\r\n  border: 1px solid #ddd;\r\n  margin: 0px -1px;\r\n  box-sizing: border-box;\r\n`;\r\n/*베스트 게시글 탭*/\r\nconst BestPostBox = styled.div`\r\n  height: 110px;\r\n  border-bottom: 1px solid #ddd;\r\n`;\r\nconst StyledDiv = styled.div`\r\n  color: #505050;\r\n  text-align: left;\r\n  margin-top: 10px;\r\n  font-size: 13px;\r\n  margin-left: 10px;\r\n`;\r\nconst FlexBox = styled.div`\r\n  display: flex;\r\n  justify-content: start;\r\n  margin: 0px 0px 0px 0px;\r\n`;\r\nconst StyledSpan = styled.span`\r\n  font-size: 10px;\r\n  color: #505050;\r\n  margin: 10px 0px 0px 5px;\r\n`;\r\nconst ProfileImage = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  margin: 10px 5px 10px 10px;\r\n  border-radius: 6px;\r\n  pointer: cursor;\r\n`;\r\nconst PaginationBox = styled.div`\r\n  text-align: center;\r\n  margin-top: 1em;\r\n  margin-bottom: 1em;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nfunction BoardView({ history, match }) {\r\n  // 파라미터:history,match\r\n  const userFrom = localStorage.getItem(\"userId\");\r\n  const writerFrom = localStorage.getItem(\"userNickname\"); // writerFrom은 userNickname 관련\r\n  const [totalPage, settotalPage] = useState(0); //전체 페이지 설정\r\n  const [currentPage, setcurrentPage] = useState(1); //현재 페이지 설정\r\n  const [WriterIcon, setWriterIcon] = useState(true);\r\n  const [BoardWriter, setBoardWriter] = useState(\"익명\"); //게시판 적는 사람 이름\r\n  const [Content, setContent] = useState([]); //컨텐츠\r\n  const [inputs, setInput] = useState({\r\n    boardTitle: \"\",\r\n    boardContent: \"\",\r\n  });\r\n  const { boardTitle, boardContent } = inputs;\r\n\r\n  useEffect(() => {\r\n    FetchBoard();\r\n    console.log(\"fetch\");\r\n  }, [currentPage]);\r\n\r\n  const FetchBoard = () => {\r\n    axios\r\n      .post(\"/communicate/view-chats\", { page: currentPage }) //현재 페이지에 관련된 게시판들을 가져 온다\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setContent(response.data.boards); // 성공한경우 서버에서 준 데이터 안에 있는 게시판을 가지고 와서 세팅해줌\r\n          settotalPage(Math.ceil(response.data.count / 5)); //소수점 이하를 반올림 한다 즉, 한페이지에 5개씩만 보여줄 예정인듯\r\n        } else {\r\n          alert(\"게시글을 보여줄 수 없습니다.\");\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  //\r\n  const onRemove = (id) => {\r\n    //\r\n    setContent(Content.filter((Content) => Content._id !== id)); // 컨텐츠를 filter 함수를 통해 다시 재구성한다\r\n    FetchBoard(); //게시판을 가지고 온다\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInput({\r\n      ...inputs, //spread 함수\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onIconClick = () => {\r\n    // 닉네임을 보여줄시, 익명으로 처리할지 보여주는 부분\r\n    if (WriterIcon) {\r\n      // writerIcon이 true이게 되면\r\n      setWriterIcon(false); //writericon을 false로 설정하고\r\n      setBoardWriter(writerFrom); //닉네임을 설정하게 된다\r\n    } else {\r\n      setWriterIcon(true); //writericon이 true가 되면 글쓴이의 아이콘이 보이지 않는다.\r\n      setBoardWriter(\"익명\");\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    //제출하는 부분\r\n    e.preventDefault();\r\n    if (!boardTitle) {\r\n      alert(`제목을 작성해주세요`);\r\n      return;\r\n    } else if (!boardContent) {\r\n      alert(`내용을 작성해주세요`);\r\n      return;\r\n    } else if (boardContent.length > 300) {\r\n      alert(`내용을 300자 이내로 작성해주세요`);\r\n      return;\r\n    }\r\n    // 유효성 검증\r\n\r\n    let variables = {\r\n      userFrom: userFrom,\r\n      boardTitle: boardTitle,\r\n      boardContent: boardContent,\r\n      boardWriter: BoardWriter,\r\n    }; // variable에 필요한 변수들 넣고 post로 서버에 넘겨준다\r\n    axios.post(\"/board/upload\", variables).then((response) => {\r\n      if (response.status === 200) {\r\n        setInput({\r\n          boardTitle: \"\",\r\n          boardContent: \"\",\r\n        });\r\n        FetchBoard();//게시글 보여주기 \r\n      } else {\r\n        alert(\"게시글 업로드에 실패하였습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handlePageChange = (e) => {\r\n    //페이지 바꾸면 벌어지는 이벤트\r\n    const currentPage = parseInt(e.target.textContent);\r\n    setcurrentPage(currentPage); // ????\r\n  };\r\n  return (\r\n    <>\r\n      <Header title=\"자유게시판\" link=\"/board\" />\r\n      <StyledBox backColor=\"#fafafa\" padding=\"10px 0px\" lineHeight=\"auto\">\r\n        {/*<Profilebox>*/}\r\n        {/*<UserProfile boardPage={true} />*/}\r\n        {/* userprofile 부분에 프로필과,아이디,학교등이 들어가게 된다. */}\r\n        {/*</Profilebox>*/}\r\n        {/* 글쓰기 부분 */}\r\n        <WriteBoard link={`/board/${match.params.view}/writeboard`} title={\"글쓰기\"} />\r\n\r\n\r\n\r\n        {/* 게시판submit부분 컴포넌트화 */}\r\n\r\n        {/* 게시판 보여주는 부분 */}\r\n\r\n        {Content && //아까 서버로 보낸 컨텐츠를 Content안에에다가 넣어주게 된다\r\n          Content.map((board, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <AddBoard // content 배열안에 id,user,time등 여러가지가 존재하고 그 관련된 부분들을 Addboard 컴포넌트안에 넣어준다\r\n                  id={board._id}\r\n                  user={board.userFrom._id}\r\n                  time={board.createdAt}\r\n                  writer={board.boardWriter}\r\n                  title={board.boardTitle}\r\n                  content={board.boardContent}\r\n                  history={`${history}`}\r\n                  onRemove={onRemove}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n\r\n        <PaginationBox>\r\n          <Pagination\r\n            count={totalPage}\r\n            page={currentPage}\r\n            onChange={handlePageChange}\r\n            shape=\"rounded\"\r\n            size=\"small\"\r\n            hidePrevButton\r\n            hideNextButton\r\n          />\r\n          {/* 페이지네이션 하는 부분 */}\r\n        </PaginationBox>\r\n        <Footer />\r\n      </StyledBox>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(BoardView);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Password.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\PageList.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Email.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Nickname.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Favorite.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\MyBoardList.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Comment.js",["297"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../../Common/Header\";\r\nimport AddBoard from \"../../Board/Section/AddBoard\";\r\nimport StyledBox from \"../../Style/styledBox\";\r\n\r\nconst Warning = styled.p`\r\n  color: #40a940;\r\n  font-size: 15px;\r\n  line-height: 18px;\r\n  font-weight: normal;\r\n  text-align: center;\r\n  padding: 50px 0px;\r\n`;\r\n\r\nfunction Comment() {\r\n  const [CommentsFrom, setCommentsFrom] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMyComments();\r\n  }, []);\r\n\r\n  const getMyComments = () => {\r\n    let userId = window.localStorage.getItem(\"userId\");\r\n    axios\r\n      .post(`/comment/comments`, { userFrom: userId })\r\n      .then((response) => {\r\n        saveOptions(response.data.comments);\r\n      })\r\n      .catch((e) => alert(`댓글을 불러오는데 실패했습니다.`));\r\n  };\r\n\r\n  const saveOptions = (comments) => {\r\n    const commentsList = [];\r\n    comments.forEach((element) => {\r\n      commentsList.push(element.boardFrom);\r\n    });\r\n    setCommentsFrom(\r\n      [...new Set(commentsList.map(JSON.stringify))].map(JSON.parse)\r\n    );\r\n  };\r\n\r\n  const onRemove = (id) => {\r\n    setCommentsFrom(\r\n      CommentsFrom.filter((CommentsFrom) => CommentsFrom._id !== id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"내가 댓글 단 글\" link=\"/board\" backbutton={true} />\r\n      {CommentsFrom.length === 0 && (\r\n        <StyledBox>\r\n          <Warning>댓글 목록이 없습니다.</Warning>\r\n        </StyledBox>\r\n      )}\r\n      {CommentsFrom &&\r\n        CommentsFrom.map((board, index) => {\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <AddBoard\r\n                id={board._id}\r\n                user={board.userFrom}\r\n                time={board.createdAt}\r\n                writer={board.boardWriter}\r\n                title={board.boardTitle}\r\n                content={board.boardContent}\r\n                onRemove={onRemove}\r\n              />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Comment);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\Profile.js",["298","299","300"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../../Common/Header\";\r\nimport Footer from \"../../Common/Footer\";\r\nimport StyledBox from \"../../Style/styledBox\";\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nconst Profilebox = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nfunction Profile() {\r\n  return (\r\n    <>\r\n      <Header title=\"닉네임 설정\" link=\"/board\" backbutton={true} />\r\n      <StyledBox lineHeight=\"40px\">\r\n        <Profilebox>\r\n          <UserProfile boardPage={true} />\r\n          {/* userprofile 부분에 프로필과,아이디,학교등이 들어가게 된다. */}\r\n        </Profilebox>\r\n      </StyledBox>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Profile);\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Login\\LoginButton.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\WithDrawal.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\WriteBoardPage.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Login\\LoginInput.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\styledBox.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\styledContainer.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\Header.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\ChcekIdButton.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\LimitOnLength.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterButton.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterSelect.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\RoomInfo.js",["301"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RoomInfo.css\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction RoomInfo({ room }) {\r\n  return (\r\n    <div className=\"roomInfo\">\r\n      <div className=\"leftInfo\">\r\n        <h3 className=\"leftInfo-text\">{`Room : ${room}`}</h3>\r\n      </div>\r\n      <div className=\"rightInfo\">\r\n        <Button\r\n          className=\"infoButton\"\r\n          // variant=\"contained\"\r\n          variant=\"raised\"\r\n          href=\"/lamaChat\"\r\n          color=\"inherit\"\r\n        >\r\n          close\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomInfo;\r\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Register\\RegisterInput.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Messages\\Messages.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Input.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\AddBoard.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CommentInput.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CheckNickname.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\AddComment.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardInput.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\Footer.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\UserProfile.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardTextarea.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\WriteBoard.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BoardSubmit.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\BestPost.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\DeleteBoard.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\UpdateTime.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\CommentButton.js",["302"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport comment from '../../../assets/comment.png';\n\nconst ButtonImage = styled.img`\n  width: 12px;\n  height: 12px;\n  margin-left: 10px;\n`\nconst CommentCounted = styled.p`\n  display: inline-block;\n  color: #0ca5af;\n  font-size: 13px;\n  padding-left: 4px;\n`\n\nfunction CommentButton({boardId}) {\n  const userFrom = localStorage.getItem(\"userId\");\n  const [CommentCounts, setCommentCounts] = useState(0);\n  let variables = {\n    userFrom: userFrom,\n    boardFrom: boardId,\n  };\n  useEffect(() => {\n    axios\n      .post(\"/comment/getComment\", variables)\n      .then((response) => {\n        if(response.data.success) {\n          setCommentCounts(response.data.commentCounts);\n        } else {\n          alert(\"댓글을 보여줄 수 없습니다.\");\n        }\n      })\n  },[])\n  return (\n    <button>\n        <ButtonImage src={comment} alt=\"comment\" />\n        <CommentCounted>{CommentCounts}</CommentCounted>\n    </button>\n  )\n}\n\nexport default CommentButton;\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageInput.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\DeleteComment.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageTitle.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Style\\MyPageButton.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Board\\Section\\LikeButton.js",["303"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport vote from \"../../../assets/vote.png\";\n\nconst ButtonImage = styled.img`\n  width: 12px;\n  height: 12px;\n  margin-left: 10px;\n`;\nconst LikeCounted = styled.p`\n  display: inline-block;\n  color: #c62917;\n  font-size: 13px;\n  padding-left: 4px;\n`;\n\nfunction LikeButton({boardId, boardTitle, boardContent, boardWriter}) {\n  const userFrom = localStorage.getItem(\"userId\");\n  const [likeCounts, setLikeCounts] = useState(0);\n  const [userLiked, setUserLiked] = useState(false);\n\n  let variables = {\n    userFrom: userFrom,\n    boardFrom: boardId,\n    boardWriter: boardWriter,\n    boardTitle: boardTitle,\n    boardContent: boardContent,\n  };\n\n  const getLikeInfo = () => {\n    axios\n      .post(\"/like/likeCounts\", variables)\n      .then((response) => {\n        if (!response.data.success) {\n          alert(\"좋아요 정보를 가져오는데 실패했습니다.\");\n          return;\n        }\n        let responsedData = response.data.likeCounts;\n        setLikeCounts(responsedData);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const ifUserHasLiked = () => {\n    axios\n      .post(\"/like/liked\", variables)\n      .then((response) => {\n        if (!response.data.success) {\n          alert(\"좋아요 정보를 가져오는데 실패했습니다.\");\n          return;\n        }\n        let responsedData = response.data.liked;\n        setUserLiked(responsedData);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const changeToDislike = () => {\n    axios\n      .post(`/like/dislike`, variables)\n      .then((response) => {\n        if (!response.data.success) {\n          alert(\"좋아요 삭제를 실패했습니다.\");\n          return;\n        }\n        setLikeCounts(likeCounts - 1);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const changeToLike = () => {\n    axios\n      .post(`/like`, variables)\n      .then((response) => {\n        if (!response.data.success) {\n          alert(\"좋아요 등록을 실패했습니다.\");\n          return;\n        }\n        setLikeCounts(likeCounts + 1);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const handleLike = (event) => {\n    event.preventDefault();\n    userLiked ? changeToDislike() : changeToLike();\n  };\n\n  useEffect(() => {\n    getLikeInfo();\n    ifUserHasLiked();\n  },[likeCounts, userLiked]);\n\n  return (\n    <>\n      <button onClick={handleLike}>\n        <ButtonImage src={vote} alt=\"vote\" />\n        <LikeCounted>{likeCounts}</LikeCounted>\n      </button>\n    </>\n  );\n}\n\nexport default LikeButton;\n","C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Common\\LogoutButton.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\MyPage\\Section\\UserProfile.js",[],"C:\\Users\\KANNA\\Desktop\\공부\\학교 문서\\소프트웨어 공학\\개발 작업\\SWEngineering_GroupCounseling\\client\\src\\components\\Chat\\Messages\\Message\\Message.js",[],{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":10,"column":8,"nodeType":"310","messageId":"311","endLine":10,"endColumn":17},{"ruleId":"308","severity":1,"message":"312","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"313","line":1,"column":28,"nodeType":"310","messageId":"311","endLine":1,"endColumn":36},{"ruleId":"308","severity":1,"message":"314","line":1,"column":38,"nodeType":"310","messageId":"311","endLine":1,"endColumn":48},{"ruleId":"308","severity":1,"message":"315","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":19},{"ruleId":"308","severity":1,"message":"316","line":3,"column":8,"nodeType":"310","messageId":"311","endLine":3,"endColumn":10},{"ruleId":"308","severity":1,"message":"317","line":9,"column":8,"nodeType":"310","messageId":"311","endLine":9,"endColumn":16},{"ruleId":"308","severity":1,"message":"318","line":10,"column":8,"nodeType":"310","messageId":"311","endLine":10,"endColumn":16},{"ruleId":"308","severity":1,"message":"319","line":11,"column":8,"nodeType":"310","messageId":"311","endLine":11,"endColumn":13},{"ruleId":"308","severity":1,"message":"320","line":13,"column":8,"nodeType":"310","messageId":"311","endLine":13,"endColumn":23},{"ruleId":"308","severity":1,"message":"321","line":14,"column":8,"nodeType":"310","messageId":"311","endLine":14,"endColumn":17},{"ruleId":"308","severity":1,"message":"322","line":17,"column":8,"nodeType":"310","messageId":"311","endLine":17,"endColumn":13},{"ruleId":"308","severity":1,"message":"323","line":62,"column":5,"nodeType":"310","messageId":"311","endLine":62,"endColumn":11},{"ruleId":"308","severity":1,"message":"324","line":5,"column":8,"nodeType":"310","messageId":"311","endLine":5,"endColumn":15},{"ruleId":"308","severity":1,"message":"325","line":16,"column":7,"nodeType":"310","messageId":"311","endLine":16,"endColumn":18},{"ruleId":"308","severity":1,"message":"326","line":46,"column":7,"nodeType":"310","messageId":"311","endLine":46,"endColumn":14},{"ruleId":"308","severity":1,"message":"327","line":52,"column":7,"nodeType":"310","messageId":"311","endLine":52,"endColumn":17},{"ruleId":"308","severity":1,"message":"328","line":57,"column":7,"nodeType":"310","messageId":"311","endLine":57,"endColumn":19},{"ruleId":"329","severity":1,"message":"330","line":69,"column":6,"nodeType":"331","endLine":69,"endColumn":8,"suggestions":"332"},{"ruleId":"308","severity":1,"message":"333","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":14},{"ruleId":"308","severity":1,"message":"334","line":7,"column":8,"nodeType":"310","messageId":"311","endLine":7,"endColumn":18},{"ruleId":"308","severity":1,"message":"335","line":8,"column":8,"nodeType":"310","messageId":"311","endLine":8,"endColumn":21},{"ruleId":"308","severity":1,"message":"336","line":9,"column":8,"nodeType":"310","messageId":"311","endLine":9,"endColumn":21},{"ruleId":"308","severity":1,"message":"337","line":10,"column":8,"nodeType":"310","messageId":"311","endLine":10,"endColumn":19},{"ruleId":"308","severity":1,"message":"338","line":14,"column":8,"nodeType":"310","messageId":"311","endLine":14,"endColumn":19},{"ruleId":"308","severity":1,"message":"339","line":16,"column":8,"nodeType":"310","messageId":"311","endLine":16,"endColumn":16},{"ruleId":"308","severity":1,"message":"340","line":18,"column":7,"nodeType":"310","messageId":"311","endLine":18,"endColumn":17},{"ruleId":"308","severity":1,"message":"341","line":23,"column":7,"nodeType":"310","messageId":"311","endLine":23,"endColumn":17},{"ruleId":"308","severity":1,"message":"342","line":36,"column":7,"nodeType":"310","messageId":"311","endLine":36,"endColumn":16},{"ruleId":"308","severity":1,"message":"325","line":44,"column":7,"nodeType":"310","messageId":"311","endLine":44,"endColumn":18},{"ruleId":"308","severity":1,"message":"343","line":48,"column":7,"nodeType":"310","messageId":"311","endLine":48,"endColumn":16},{"ruleId":"308","severity":1,"message":"326","line":55,"column":7,"nodeType":"310","messageId":"311","endLine":55,"endColumn":14},{"ruleId":"308","severity":1,"message":"327","line":60,"column":7,"nodeType":"310","messageId":"311","endLine":60,"endColumn":17},{"ruleId":"308","severity":1,"message":"328","line":65,"column":7,"nodeType":"310","messageId":"311","endLine":65,"endColumn":19},{"ruleId":"329","severity":1,"message":"344","line":98,"column":6,"nodeType":"331","endLine":98,"endColumn":19,"suggestions":"345"},{"ruleId":"308","severity":1,"message":"346","line":121,"column":9,"nodeType":"310","messageId":"311","endLine":121,"endColumn":17},{"ruleId":"308","severity":1,"message":"347","line":129,"column":9,"nodeType":"310","messageId":"311","endLine":129,"endColumn":20},{"ruleId":"308","severity":1,"message":"348","line":141,"column":9,"nodeType":"310","messageId":"311","endLine":141,"endColumn":17},{"ruleId":"329","severity":1,"message":"349","line":23,"column":6,"nodeType":"331","endLine":23,"endColumn":8,"suggestions":"350"},{"ruleId":"308","severity":1,"message":"312","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"313","line":1,"column":28,"nodeType":"310","messageId":"311","endLine":1,"endColumn":36},{"ruleId":"308","severity":1,"message":"351","line":3,"column":8,"nodeType":"310","messageId":"311","endLine":3,"endColumn":13},{"ruleId":"308","severity":1,"message":"333","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":14},{"ruleId":"329","severity":1,"message":"352","line":35,"column":5,"nodeType":"331","endLine":35,"endColumn":7,"suggestions":"353"},{"ruleId":"329","severity":1,"message":"354","line":93,"column":5,"nodeType":"331","endLine":93,"endColumn":28,"suggestions":"355"},"no-native-reassign",["356"],"no-negated-in-lhs",["357"],"no-unused-vars","'BoardMain' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'useReducer' is defined but never used.","'queryString' is defined but never used.","'io' is defined but never used.","'Messages' is defined but never used.","'RoomInfo' is defined but never used.","'Input' is defined but never used.","'StyledContainer' is defined but never used.","'StyledBox' is defined but never used.","'Paper' is defined but never used.","'socket' is defined but never used.","'profile' is defined but never used.","'BestPostBox' is assigned a value but never used.","'FlexBox' is assigned a value but never used.","'StyledSpan' is assigned a value but never used.","'ProfileImage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'BoardId', 'FetchComment', and 'props.match.path'. Either include them or remove the dependency array.","ArrayExpression",["358"],"'Link' is defined but never used.","'BoardInput' is defined but never used.","'CheckNickname' is defined but never used.","'BoardTextarea' is defined but never used.","'UserProfile' is defined but never used.","'BoardSubmit' is defined but never used.","'BestPost' is defined but never used.","'Profilebox' is assigned a value but never used.","'Profilebtn' is assigned a value but never used.","'BoardForm' is assigned a value but never used.","'StyledDiv' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'FetchBoard'. Either include it or remove the dependency array.",["359"],"'onChange' is assigned a value but never used.","'onIconClick' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMyComments'. Either include it or remove the dependency array.",["360"],"'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'variables'. Either include it or remove the dependency array.",["361"],"React Hook useEffect has missing dependencies: 'getLikeInfo' and 'ifUserHasLiked'. Either include them or remove the dependency array.",["362"],"no-global-assign","no-unsafe-negation",{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},"Update the dependencies array to be: [BoardId, FetchComment, props.match.path]",{"range":"373","text":"374"},"Update the dependencies array to be: [FetchBoard, currentPage]",{"range":"375","text":"376"},"Update the dependencies array to be: [getMyComments]",{"range":"377","text":"378"},"Update the dependencies array to be: [variables]",{"range":"379","text":"380"},"Update the dependencies array to be: [getLikeInfo, ifUserHasLiked, likeCounts, userLiked]",{"range":"381","text":"382"},[2091,2093],"[BoardId, FetchComment, props.match.path]",[2758,2771],"[FetchBoard, currentPage]",[609,611],"[getMyComments]",[866,868],"[variables]",[2263,2286],"[getLikeInfo, ifUserHasLiked, likeCounts, userLiked]"]